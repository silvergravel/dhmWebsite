{"ast":null,"code":"var _jsxFileName = \"/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/configure-castor-page.js\";\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\n\nvar data = require('../data/configure-castor-content.json');\n\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ConfigureCastor extends Component {\n  constructor(props) {\n    super(props); // this.props.history.push('hello');\n\n    console.log(\"url: \");\n    console.log(this.props.history);\n    var activeMaterialId;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (this.props.location.state != undefined) {\n      console.log(\"yoyoyo\" + this.props.location.state);\n      activeMaterialId = this.props.location.state.activeMaterialId;\n      this.props.history.push(configCode + \"-materialOptions:\" + activeMaterialId);\n    } else {}\n\n    var itemCode = this.props.match.params.itemCode;\n    console.log(\"item condeis : \" + itemCode);\n    var itemCodeSplits = itemCode.split(\"-\");\n    console.log(\"l;ength\" + itemCodeSplits.length);\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null;\n    this.state = {\n      activeDutyId: itemCodeSplits[0],\n      activeSeriesId: itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      activevitalsOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits.forEach(function (element) {\n        if (element.includes(\"vitalsOptions\")) {\n          return elemeny.split(\":\")[1];\n        } else {\n          return 0;\n        }\n      }) : 0,\n      activebracketOptionsId: 0,\n      activegrooveOptionsId: activeGrooveOptionsId,\n      braking: false,\n      quantity: 0\n    };\n    this.updateWheelConfig = this.updateWheelConfig.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n  }\n\n  updateWheelConfig(evt, id, key) {\n    this.setState({\n      [\"active\" + key + \"Id\"]: evt.currentTarget.dataset.id\n    });\n    console.log(\"key is \" + key);\n    console.log(\"id \" + evt.currentTarget.dataset.id);\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" && this.setState({\n      braking: false\n    }); //url update\n\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (key !== \"vitalsOptions\") {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    } else {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n\n    for (var i = 0; i < configCodeParts.length; i++) {\n      if (configCodeParts[i].includes(key)) {\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n\n    if (isConfigCodeUpdated) {\n      for (var i = 0; i < configCodeParts.length; i++) {\n        updatedUrl += configCodeParts[i];\n        console.log(\"i is: \" + i);\n\n        if (i !== configCodeParts.length - 1) {\n          updatedUrl += \"-\";\n        }\n      }\n    } else {\n      updatedUrl = configCode + \"-\" + urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl); // console.log(urlUpdateText);\n  }\n\n  updateInput(evt) {\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  }\n\n  validateAndAddToCart(wheelConfig) {\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  render() {\n    console.log(\"amo: \" + this.state.activematerialOptionsId);\n    const _this$state = this.state,\n          activeDutyId = _this$state.activeDutyId,\n          activeSeriesId = _this$state.activeSeriesId,\n          activematerialOptionsId = _this$state.activematerialOptionsId,\n          activevitalsOptionsId = _this$state.activevitalsOptionsId,\n          activebracketOptionsId = _this$state.activebracketOptionsId,\n          activegrooveOptionsId = _this$state.activegrooveOptionsId,\n          braking = _this$state.braking,\n          quantity = _this$state.quantity;\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activeSeries.bracketOptions;\n    const materialOptions = activeSeries.materialOptions;\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null;\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions; // const activeProductImage = materialOptions[activematerialOptionsId].image+bracketOptions[activebracketOptionsId].code+\".png\";\n    // const activeProductImage = \"/product-images/\"+activeSeries.code+\"/\"+activeSeries.code+\"_\"+materialOptions[activematerialOptionsId].code+\"_\"+bracketOptions[activebracketOptionsId].code+\".png\";\n\n    const activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"]; // const activeProductImage = \"\";\n    // console.log(\"active product img: \"+activeProductImage);\n    //\n    // console.log(\"activeDuty: \" +activeDutyId);\n    // console.log(\"activeSeries: \" +activeSeriesId);\n    // console.log(\"activeMaterial: \" +materialOptions[activematerialOptionsId].material);\n    // console.log(\"activeMaterial: \" +materialOptions[activematerialOptionsId].material);\n    // console.log(\"activeWheelDia: \" +vitalsOptions[activevitalsOptionsId].wheelDiameter);\n    // console.log(\"activeLoadCap: \" +vitalsOptions[activevitalsOptionsId].loadCapacity);\n    // console.log(\"activeBracketOps: \" +bracketOptions[activebracketOptionsId].plateType);\n    // console.log(\"quantity: \" + this.state.quantity);\n    // console.log(\"braking: \" + this.state.braking);\n\n    return React.createElement(\"div\", {\n      className: \"config-castor-wrapper container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium section__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Build Your Castor\"), React.createElement(\"div\", {\n      className: \"config-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"series-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"black regular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, activeDutyName + \" Castors\"), activeSeriesName)), React.createElement(\"div\", {\n      className: \"config-panel__body row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + activeProductImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields col-lg-5 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"config-field-dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(DropdownMaterial, {\n      activeOptionId: materialOptions[activematerialOptionsId].id //this will become a state variable\n      ,\n      label: \"WHEEL MATERIAL\",\n      list: materialOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-field-dd-wheel-dia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(DropdownWheelDia, {\n      activeOptionId: 0 //this will become a state variable\n      ,\n      label: \"WHEEL DIAMETER <----> LOAD CAPACITY\",\n      list: vitalsOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-vitalsMeta-bracket-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wheel-config-meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"TOTAL HEIGHT\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"(wheel + bracket)\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, vitalsOptions[activevitalsOptionsId].totalHeight)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"WHEEL\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"THICKNESS\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, vitalsOptions[activevitalsOptionsId].treadWidth))), React.createElement(\"div\", {\n      className: \"config-fields-bracket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: 0 //this will become a state variable\n      ,\n      label: \"BRACKET TYPE\",\n      list: bracketOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config-fields-bracket-braking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: bracketOptions[activebracketOptionsId].brakingDescp,\n      disabledClass: bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\",\n      checked: braking,\n      name: \"braking\",\n      updateInput: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))), grooveOptions !== null && React.createElement(\"div\", {\n      className: \"config-fields-groove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: 0 //this will become a state variable\n      ,\n      label: \"GROOVE TYPE\",\n      list: grooveOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      label: \"QUANTITY\",\n      type: \"number\",\n      name: \"quantity\",\n      updateInput: this.updateInput,\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"configure-panel__cta row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"DOWNLOAD TECHNICAL SPECIIFCATIONS\")), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"SHARE\")), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"REQUEST QUOTE NOW\")), React.createElement(\"button\", {\n      onClick: () => this.validateAndAddToCart(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"ADD TO QUOTE CART\")))));\n  }\n\n}\n\nexport default ConfigureCastor;","map":{"version":3,"sources":["/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/configure-castor-page.js"],"names":["React","Component","DropdownMaterial","DropdownWheelDia","InputField","Radio","Checkbox","data","require","productImgPath","ConfigureCastor","constructor","props","console","log","history","activeMaterialId","urlParts","location","pathname","split","configCode","length","state","undefined","push","itemCode","match","params","itemCodeSplits","activeGrooveOptionsId","hasOwnProperty","activeDutyId","activeSeriesId","activematerialOptionsId","activevitalsOptionsId","forEach","element","includes","elemeny","activebracketOptionsId","activegrooveOptionsId","braking","quantity","updateWheelConfig","bind","updateInput","validateAndAddToCart","evt","id","key","setState","currentTarget","dataset","urlUpdateText","materialOptions","configCodeParts","isConfigCodeUpdated","updatedUrl","i","value","target","type","checked","name","wheelConfig","updateCart","alert","render","activeDuty","activeDutyName","duty","activeSeries","activeSeriesName","series","bracketOptions","grooveOptions","vitalsOptions","activeProductImage","code","process","env","PUBLIC_URL","totalHeight","treadWidth","brakingDescp","brakingType"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\n\nvar data = require('../data/configure-castor-content.json');\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ConfigureCastor extends Component{\n\n  constructor(props){\n    super(props)\n    // this.props.history.push('hello');\n    console.log(\"url: \");\n\n    console.log(this.props.history);\n\n\n\n    var activeMaterialId;\n\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(this.props.location.state != undefined){\n      console.log(\"yoyoyo\"+this.props.location.state);\n      activeMaterialId = this.props.location.state.activeMaterialId;\n      this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    }else{\n\n    }\n\n    var itemCode = this.props.match.params.itemCode;\n    console.log(\"item condeis : \"+itemCode);\n    var itemCodeSplits = itemCode.split(\"-\");\n    console.log(\"l;ength\"+itemCodeSplits.length);\n\n\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null;\n\n    this.state = {\n      activeDutyId:itemCodeSplits[0],\n      activeSeriesId:itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      activevitalsOptionsId: itemCodeSplits.length >= 3 ?\n                             itemCodeSplits.forEach(function(element){\n                               if(element.includes(\"vitalsOptions\")){\n                                 return elemeny.split(\":\")[1];\n                               }else{\n                                 return 0;\n                               }\n                             }) :\n                             0,\n      activebracketOptionsId: 0,\n      activegrooveOptionsId: activeGrooveOptionsId,\n      braking: false,\n      quantity: 0\n    }\n    this.updateWheelConfig = this.updateWheelConfig.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n\n\n  }\n\n  updateWheelConfig(evt, id, key){\n    this.setState({[\"active\"+key+\"Id\"]:evt.currentTarget.dataset.id});\n    console.log(\"key is \"+key);\n    console.log(\"id \"+evt.currentTarget.dataset.id);\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" &&\n    this.setState({braking: false})\n\n    //url update\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(key !== \"vitalsOptions\"){\n        urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    }else{\n      urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n    for(var i = 0; i < configCodeParts.length; i++){\n      if(configCodeParts[i].includes(key)){\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n    if(isConfigCodeUpdated){\n      for(var i = 0; i < configCodeParts.length; i++){\n        updatedUrl += configCodeParts[i];\n        console.log(\"i is: \"+i);\n        if(i !== configCodeParts.length-1){\n          updatedUrl += \"-\";\n        }\n\n      }\n    }else{\n        updatedUrl = configCode+\"-\"+urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl);\n    // console.log(urlUpdateText);\n\n  }\n\n  updateInput(evt){\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({[evt.target.name]: value});\n  }\n\n  validateAndAddToCart(wheelConfig){\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n\n\n\n  render(){\n\n\n    console.log(\"amo: \"+this.state.activematerialOptionsId);\n    const{activeDutyId, activeSeriesId, activematerialOptionsId, activevitalsOptionsId, activebracketOptionsId, activegrooveOptionsId, braking, quantity} = this.state;\n\n\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activeSeries.bracketOptions;\n    const materialOptions = activeSeries.materialOptions;\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null;\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions;\n    // const activeProductImage = materialOptions[activematerialOptionsId].image+bracketOptions[activebracketOptionsId].code+\".png\";\n    // const activeProductImage = \"/product-images/\"+activeSeries.code+\"/\"+activeSeries.code+\"_\"+materialOptions[activematerialOptionsId].code+\"_\"+bracketOptions[activebracketOptionsId].code+\".png\";\n    const activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"];\n    // const activeProductImage = \"\";\n    // console.log(\"active product img: \"+activeProductImage);\n    //\n    // console.log(\"activeDuty: \" +activeDutyId);\n    // console.log(\"activeSeries: \" +activeSeriesId);\n    // console.log(\"activeMaterial: \" +materialOptions[activematerialOptionsId].material);\n    // console.log(\"activeMaterial: \" +materialOptions[activematerialOptionsId].material);\n    // console.log(\"activeWheelDia: \" +vitalsOptions[activevitalsOptionsId].wheelDiameter);\n    // console.log(\"activeLoadCap: \" +vitalsOptions[activevitalsOptionsId].loadCapacity);\n    // console.log(\"activeBracketOps: \" +bracketOptions[activebracketOptionsId].plateType);\n    // console.log(\"quantity: \" + this.state.quantity);\n    // console.log(\"braking: \" + this.state.braking);\n    return(\n\n      <div className=\"config-castor-wrapper container\">\n        <h4 className=\"black medium section__title\">Build Your Castor</h4>\n        <div className=\"config-panel\">\n          <div className=\"series-bar\">\n            <h4 className=\"black medium\"><span className=\"black regular\">{activeDutyName+\" Castors\"}</span>{activeSeriesName}</h4>\n          </div>\n          <div className=\"config-panel__body row\">\n            <div className=\"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\">\n              <img src={process.env.PUBLIC_URL + activeProductImage} alt=\"\" />\n            </div>\n            <div className=\"config-fields col-lg-5 col-md-6 col-sm-6 col-12\">\n              <div className=\"config-field-dd-material\">\n                <DropdownMaterial\n                  activeOptionId= {materialOptions[activematerialOptionsId].id} //this will become a state variable\n                  label=\"WHEEL MATERIAL\"\n                  list={materialOptions}\n                  updateWheelConfig={this.updateWheelConfig}\n                />\n              </div>\n\n              <div className=\"config-field-dd-wheel-dia\">\n                <DropdownWheelDia\n                  activeOptionId= {0} //this will become a state variable\n                  label=\"WHEEL DIAMETER <----> LOAD CAPACITY\"\n                  list={vitalsOptions}\n                  updateWheelConfig={this.updateWheelConfig}\n                />\n              </div>\n\n              <div className=\"config-fields-vitalsMeta-bracket-quantity\">\n                <div className=\"wheel-config-meta\">\n                  <div>\n                  <h5 className=\"beige antique\">TOTAL HEIGHT</h5>\n                  <h5 className=\"beige antique\">(wheel + bracket)</h5>\n                  <h4 className=\"black medium\">{vitalsOptions[activevitalsOptionsId].totalHeight}</h4>\n                  </div>\n                  <div>\n                  <h5 className=\"beige antique\">WHEEL</h5>\n                  <h5 className=\"beige antique\">THICKNESS</h5>\n                  <h4 className=\"black medium\">{vitalsOptions[activevitalsOptionsId].treadWidth}</h4>\n                  </div>\n                </div>\n\n                <div className=\"config-fields-bracket\">\n                  <Radio\n                    activeOptionId= {0} //this will become a state variable\n                    label=\"BRACKET TYPE\"\n                    list={bracketOptions}\n                    updateWheelConfig={this.updateWheelConfig}\n                  />\n\n                  <div className=\"config-fields-bracket-braking\">\n                    <Checkbox\n                    label={bracketOptions[activebracketOptionsId].brakingDescp}\n                    disabledClass={bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\"}\n                    checked={braking}\n                    name=\"braking\"\n                    updateInput ={this.updateInput}\n                    />\n                  </div>\n                </div>\n\n                {\n                  grooveOptions !== null &&\n\n                  <div className=\"config-fields-groove\">\n                    <Radio\n                      activeOptionId= {0} //this will become a state variable\n                      label=\"GROOVE TYPE\"\n                      list={grooveOptions}\n                      updateWheelConfig={this.updateWheelConfig}\n                    />\n                  </div>\n                }\n\n                <div className=\"config-fields-quantity\">\n                  <InputField\n                  label=\"QUANTITY\"\n                  type=\"number\"\n                  name=\"quantity\"\n                  updateInput ={this.updateInput}\n                  min=\"1\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className= \"configure-panel__cta row\">\n            <button><h4 className=\"black antique\">DOWNLOAD TECHNICAL SPECIIFCATIONS</h4></button>\n            <button><h4 className=\"black antique\">SHARE</h4></button>\n            <button><h4 className=\"black antique\">REQUEST QUOTE NOW</h4></button>\n            <button onClick={() => this.validateAndAddToCart(this.state)}><h4 className=\"black antique\">ADD TO QUOTE CART</h4></button>\n          </div>\n        </div>\n      </div>\n\n\n\n\n\n    );\n  }\n\n}\nexport default ConfigureCastor;\n"]},"metadata":{},"sourceType":"module"}