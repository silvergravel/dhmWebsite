{"ast":null,"code":"var _jsxFileName = \"/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/configure-castor-page.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactToPrint, { PrintContextConsumer } from 'react-to-print';\nimport htmlToImage from 'html-to-image';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\nimport LineArrow from \"../images/lineArrow.svg\";\n\nvar data = require('../data/configure-castor-content.json');\n\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ConfigureCastor extends Component {\n  constructor(props) {\n    super(props);\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n    var activeMaterialId;\n    var vitalsOptionsId = 0;\n    var bracketOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"bracketOptions\") === true ? 0 : null;\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null;\n    var configurable = data[itemCodeSplits[0]][itemCodeSplits[1]].configurable;\n    console.log(\"configurable: \" + configurable);\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (this.props.location.state != undefined) {\n      activeMaterialId = this.props.location.state.activeMaterialId;\n      this.props.history.push(configCode + \"-materialOptions:\" + activeMaterialId);\n    } else {\n      activeMaterialId = \"chello\";\n    }\n\n    console.log(\"active material id: \" + activeMaterialId);\n\n    if (itemCodeSplits.length >= 3) {\n      for (let i = 0; i < itemCodeSplits.length; i++) {\n        console.log(itemCodeSplits[i]);\n\n        if (itemCodeSplits[i].includes(\"vitalsOptions\")) {\n          vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      }\n\n      ;\n\n      for (let i = 0; i < itemCodeSplits.length; i++) {\n        console.log(itemCodeSplits[i]);\n\n        if (itemCodeSplits[i].includes(\"bracketOptions\")) {\n          bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      }\n\n      ;\n\n      if (activeGrooveOptionsId !== null) {\n        for (let i = 0; i < itemCodeSplits.length; i++) {\n          console.log(itemCodeSplits[i]);\n\n          if (itemCodeSplits[i].includes(\"grooveOptions\")) {\n            activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n            break;\n          }\n        }\n\n        ;\n      }\n    }\n\n    this.state = {\n      activeDutyId: itemCodeSplits[0],\n      activeSeriesId: itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      activevitalsOptionsId: vitalsOptionsId,\n      activebracketOptionsId: bracketOptionsId,\n      activegrooveOptionsId: activeGrooveOptionsId,\n      braking: false,\n      quantity: 0,\n      configurable: true,\n      showSavingLoader: false,\n      showPopUp: 'none'\n    };\n    this.updateWheelConfig = this.updateWheelConfig.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n    this.createImgFromHtml = this.createImgFromHtml.bind(this);\n  }\n\n  updateWheelConfig(evt, id, key) {\n    this.setState({\n      [\"active\" + key + \"Id\"]: evt.currentTarget.dataset.id\n    });\n    console.log(\"key is \" + key);\n    console.log(\"id \" + evt.currentTarget.dataset.id);\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" && this.setState({\n      braking: false\n    }); //url update\n\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (key !== \"vitalsOptions\") {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    } else {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n\n    for (var i = 0; i < configCodeParts.length; i++) {\n      if (configCodeParts[i].includes(key)) {\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n\n    if (isConfigCodeUpdated) {\n      for (var i = 0; i < configCodeParts.length; i++) {\n        updatedUrl += configCodeParts[i];\n        console.log(\"i is: \" + i);\n\n        if (i !== configCodeParts.length - 1) {\n          updatedUrl += \"-\";\n        }\n      }\n    } else {\n      updatedUrl = configCode + \"-\" + urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl); // console.log(urlUpdateText);\n  }\n\n  updateInput(evt) {\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  }\n\n  validateAndAddToCart(wheelConfig, configurableStatus) {\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig, configurableStatus) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  createImgFromHtml(id) {\n    this.setState({\n      showSavingLoader: true\n    });\n    htmlToImage.toJpeg(document.getElementById(id), {\n      quality: 0.95\n    }).then(function (dataUrl) {\n      var link = document.createElement('a');\n      link.download = 'product_dhmwheels.jpeg';\n      link.href = dataUrl;\n      link.click();\n      this.setState({\n        showSavingLoader: false\n      });\n    }.bind(this));\n  }\n\n  showPopUp(bool) {\n    if (bool === true) {\n      this.setState({\n        showPopUp: 'block'\n      });\n    } else {\n      this.setState({\n        showPopUp: 'none'\n      });\n    }\n  }\n\n  copyToClipboard() {\n    let textElem = document.getElementById(\"share_popup__link_text\");\n    textElem.select();\n    document.execCommand('copy');\n    alert('link successfully copied to clipboard!');\n  }\n\n  getLinkWhastapp(message) {\n    var url = 'https://api.whatsapp.com/send?text=' + encodeURIComponent(message);\n    return url;\n  }\n\n  render() {\n    console.log(\"vmo: \" + this.state.activevitalsOptionsId);\n    const _this$state = this.state,\n          activeDutyId = _this$state.activeDutyId,\n          activeSeriesId = _this$state.activeSeriesId,\n          activematerialOptionsId = _this$state.activematerialOptionsId,\n          activevitalsOptionsId = _this$state.activevitalsOptionsId,\n          activebracketOptionsId = _this$state.activebracketOptionsId,\n          activegrooveOptionsId = _this$state.activegrooveOptionsId,\n          braking = _this$state.braking,\n          quantity = _this$state.quantity;\n    const configurableStatus = data[activeDutyId][activeSeriesId].configurable;\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activebracketOptionsId !== null ? activeSeries.bracketOptions : null;\n    const materialOptions = activeSeries.materialOptions;\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null;\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions;\n    var activeProductImage;\n    activegrooveOptionsId !== null ? activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][grooveOptions[activegrooveOptionsId].code][\"712\"] : activebracketOptionsId !== null ? activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"] : activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][\"712\"];\n    ;\n    let activeVital = vitalsOptions[activevitalsOptionsId] ? vitalsOptions[activevitalsOptionsId] : vitalsOptions[0];\n    const toDownloadRef = React.createRef();\n    console.log(\"SHOW!\", this.state.showSavingLoader);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"share-popup-container\",\n      style: {\n        display: this.state.showPopUp\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"share-popup-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"share-popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"share-popup__text-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"COPY LINK:\"), React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: window.location.href,\n      id: \"share_popup__link_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"secondary share-popup__copy-link-btn\",\n      onClick: () => this.copyToClipboard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black regular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"COPY\"))), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"OR\"), React.createElement(\"a\", {\n      href: this.getLinkWhastapp('I am interested in this product:' + window.location.href),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"SHARE TO WHATSAPP\")))), React.createElement(\"div\", {\n      className: \"share-popup__actions-group\",\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      onClick: () => this.showPopUp(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"CLOSE\")))))), React.createElement(\"div\", {\n      className: \"config-castor-wrapper container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, this.state.showSavingLoader && React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '300px',\n        height: \"200px\",\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#f4f2ed',\n        zIndex: '10000',\n        border: '1px solid #B5A98C',\n        boxShadow: '1px 1px 7px rgba(0,0,0,0.1)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        padding: '20px'\n      },\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"saving this castor as an image...\")), React.createElement(\"h4\", {\n      className: \"black medium section__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Build Your Castor\"), React.createElement(\"div\", {\n      className: \"config-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"configContainer\",\n      style: {\n        backgroundColor: 'white'\n      },\n      ref: el => this.componentRef = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"series-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"black regular\",\n      style: {\n        marginRight: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, activeDutyName + \" Castors\"), activeSeriesName)), React.createElement(\"div\", {\n      className: \"config-panel__body row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + activeProductImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields col-lg-5 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"config-field-dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(DropdownMaterial, {\n      activeOptionId: materialOptions[activematerialOptionsId].id //this will become a state variable\n      ,\n      label: \"WHEEL MATERIAL\",\n      list: materialOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-field-dd-wheel-dia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(DropdownWheelDia, {\n      activeOptionId: activeVital ? activeVital.id : vitalsOptions[0].id //this will become a state variable\n      ,\n      label: React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"WHEEL DIAMETER\"), vitalsOptions.some(d => d.showTreadWidthInDD === true) && React.createElement(\"h6\", {\n        className: \"h6 beige medium\",\n        style: {\n          marginLeft: '4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"( thickness )\"), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: LineArrow,\n        alt: \"<---->\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"LOAD CAPACITY\")),\n      list: vitalsOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-vitalsMeta-bracket-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wheel-config-meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"TOTAL HEIGHT\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"(wheel + bracket)\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, activeVital.totalHeight)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"WHEEL\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"THICKNESS\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, activeVital.treadWidth))), bracketOptions !== null && React.createElement(\"div\", {\n      className: \"config-fields-bracket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: bracketOptions[activebracketOptionsId].id //this will become a state variable\n      ,\n      label: \"BRACKET TYPE\",\n      list: bracketOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config-fields-bracket-braking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: bracketOptions[activebracketOptionsId].brakingDescp,\n      disabledClass: bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\",\n      checked: braking,\n      name: \"braking\",\n      updateInput: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }))), grooveOptions !== null && React.createElement(\"div\", {\n      className: \"config-fields-groove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: grooveOptions[activegrooveOptionsId].id //this will become a state variable\n      ,\n      label: \"GROOVE TYPE\",\n      list: grooveOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      label: \"QUANTITY\",\n      type: \"number\",\n      name: \"quantity\",\n      updateInput: this.updateInput,\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"configure-panel__cta row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-6 col-sm-6 col-12 secondary_cta_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      onClick: () => this.createImgFromHtml('configContainer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"SAVE PAGE\"))), React.createElement(ReactToPrint, {\n      content: () => this.componentRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(PrintContextConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, ({\n      handlePrint\n    }) => React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      onClick: handlePrint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"PRINT PAGE\"))))), React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      onClick: () => this.showPopUp(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"SHARE\")))), React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-6 col-sm-6 col-12 primary_cta_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"primary\",\n      onClick: () => this.validateAndAddToCart(this.state, configurableStatus),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"ADD TO QUOTE CART\"))))))));\n  }\n\n}\n\nexport default ConfigureCastor;","map":{"version":3,"sources":["/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/configure-castor-page.js"],"names":["React","Component","Fragment","ReactToPrint","PrintContextConsumer","htmlToImage","DropdownMaterial","DropdownWheelDia","InputField","Radio","Checkbox","data","require","productImgPath","ConfigureCastor","constructor","props","itemCode","match","params","itemCodeSplits","split","activeMaterialId","vitalsOptionsId","bracketOptionsId","hasOwnProperty","activeGrooveOptionsId","configurable","console","log","urlParts","location","pathname","configCode","length","state","undefined","history","push","i","includes","activeDutyId","activeSeriesId","activematerialOptionsId","activevitalsOptionsId","activebracketOptionsId","activegrooveOptionsId","braking","quantity","showSavingLoader","showPopUp","updateWheelConfig","bind","updateInput","validateAndAddToCart","createImgFromHtml","evt","id","key","setState","currentTarget","dataset","urlUpdateText","materialOptions","configCodeParts","isConfigCodeUpdated","updatedUrl","value","target","type","checked","name","wheelConfig","configurableStatus","updateCart","alert","toJpeg","document","getElementById","quality","then","dataUrl","link","createElement","download","href","click","bool","copyToClipboard","textElem","select","execCommand","getLinkWhastapp","message","url","encodeURIComponent","render","activeDuty","activeDutyName","duty","activeSeries","activeSeriesName","series","bracketOptions","grooveOptions","vitalsOptions","activeProductImage","code","activeVital","toDownloadRef","createRef","display","window","width","justifyContent","position","left","top","transform","height","alignItems","backgroundColor","zIndex","border","boxShadow","padding","el","componentRef","marginRight","process","env","PUBLIC_URL","some","d","showTreadWidthInDD","marginLeft","margin","LineArrow","totalHeight","treadWidth","brakingDescp","brakingType","handlePrint"],"mappings":"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","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport ReactToPrint, {PrintContextConsumer} from 'react-to-print';\nimport htmlToImage from 'html-to-image';\n\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\nimport LineArrow from '../images/lineArrow.svg';\n\n\nvar data = require('../data/configure-castor-content.json');\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ConfigureCastor extends Component{\n\n  constructor(props){\n    super(props)\n\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n\n    var activeMaterialId;\n    var vitalsOptionsId = 0;\n\n    var bracketOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"bracketOptions\") === true ? 0 : null;\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null;\n    var configurable = data[itemCodeSplits[0]][itemCodeSplits[1]].configurable;\n    console.log(\"configurable: \"+configurable);\n\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(this.props.location.state != undefined){\n      activeMaterialId = this.props.location.state.activeMaterialId;\n      this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    }else{\n      activeMaterialId = \"chello\";\n    }\n\n    console.log(\"active material id: \"+activeMaterialId);\n\n    if(itemCodeSplits.length >= 3){\n      for(let i = 0; i < itemCodeSplits.length; i++){\n      console.log(itemCodeSplits[i]);\n        if(itemCodeSplits[i].includes(\"vitalsOptions\")){\n          vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      };\n\n      for(let i = 0; i < itemCodeSplits.length; i++){\n      console.log(itemCodeSplits[i]);\n        if(itemCodeSplits[i].includes(\"bracketOptions\")){\n          bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      };\n\n      if(activeGrooveOptionsId !== null){\n        for(let i = 0; i < itemCodeSplits.length; i++){\n        console.log(itemCodeSplits[i]);\n          if(itemCodeSplits[i].includes(\"grooveOptions\")){\n            activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n            break;\n          }\n        };\n      }\n    }\n\n\n\n\n\n\n    this.state = {\n      activeDutyId:itemCodeSplits[0],\n      activeSeriesId:itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      activevitalsOptionsId: vitalsOptionsId,\n      activebracketOptionsId: bracketOptionsId,\n      activegrooveOptionsId: activeGrooveOptionsId,\n      braking: false,\n      quantity: 0,\n      configurable: true,\n      showSavingLoader: false,\n      showPopUp: 'none'\n    }\n    this.updateWheelConfig = this.updateWheelConfig.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n    this.createImgFromHtml = this.createImgFromHtml.bind(this);\n\n  }\n\n  updateWheelConfig(evt, id, key){\n    this.setState({[\"active\"+key+\"Id\"]:evt.currentTarget.dataset.id});\n    console.log(\"key is \"+key);\n    console.log(\"id \"+evt.currentTarget.dataset.id);\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" &&\n    this.setState({braking: false})\n\n    //url update\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(key !== \"vitalsOptions\"){\n        urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    }else{\n      urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n    for(var i = 0; i < configCodeParts.length; i++){\n      if(configCodeParts[i].includes(key)){\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n    if(isConfigCodeUpdated){\n      for(var i = 0; i < configCodeParts.length; i++){\n        updatedUrl += configCodeParts[i];\n        console.log(\"i is: \"+i);\n        if(i !== configCodeParts.length-1){\n          updatedUrl += \"-\";\n        }\n\n      }\n    }else{\n        updatedUrl = configCode+\"-\"+urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl);\n    // console.log(urlUpdateText);\n\n  }\n\n  updateInput(evt){\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({[evt.target.name]: value});\n  }\n\n  validateAndAddToCart(wheelConfig, configurableStatus){\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig, configurableStatus) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  createImgFromHtml(id){\n    this.setState({showSavingLoader: true})\n    htmlToImage.toJpeg(document.getElementById(id), { quality: 0.95 })\n    .then(function (dataUrl) {\n      var link = document.createElement('a');\n      link.download = 'product_dhmwheels.jpeg';\n      link.href = dataUrl;\n      link.click();\n      this.setState({showSavingLoader: false})\n    }.bind(this));\n  }\n\n  showPopUp(bool){\n    if(bool === true){\n      this.setState({showPopUp: 'block'});\n    }else{\n      this.setState({showPopUp: 'none'});\n    }\n\n  }\n\n  copyToClipboard(){\n    let textElem = document.getElementById(\"share_popup__link_text\")\n    textElem.select();\n    document.execCommand('copy');\n    alert('link successfully copied to clipboard!');\n  }\n\n  getLinkWhastapp(message) {\n    var url = 'https://api.whatsapp.com/send?text=' + encodeURIComponent(message)\n\n    return url\n  }\n\n\n  render(){\n\n\n    console.log(\"vmo: \"+this.state.activevitalsOptionsId);\n    const{activeDutyId, activeSeriesId, activematerialOptionsId, activevitalsOptionsId, activebracketOptionsId, activegrooveOptionsId, braking, quantity} = this.state;\n\n    const configurableStatus = data[activeDutyId][activeSeriesId].configurable;\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activebracketOptionsId !== null ? activeSeries.bracketOptions : null;\n    const materialOptions = activeSeries.materialOptions;\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null;\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions;\n\n    var activeProductImage;\n    activegrooveOptionsId !== null ?\n    activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][grooveOptions[activegrooveOptionsId].code][\"712\"] :\n    activebracketOptionsId !== null ?\n    activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"]:\n    activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][\"712\"];\n    ;\n\n    let activeVital = vitalsOptions[activevitalsOptionsId] ? vitalsOptions[activevitalsOptionsId] : vitalsOptions[0];\n\n    const toDownloadRef = React.createRef();\n\n    console.log(\"SHOW!\",this.state.showSavingLoader);\n\n    return(\n      <Fragment>\n        <div className='share-popup-container' style={{display: this.state.showPopUp}}>\n          <div className='share-popup-wrapper'>\n            <div className='share-popup'>\n              <div className='share-popup__text-group'>\n                <h4 className=\"black medium\">COPY LINK:</h4>\n                <div style={{display:'flex'}}>\n                  <input type=\"text\" value={window.location.href} id=\"share_popup__link_text\" />\n                  <button className=\"secondary share-popup__copy-link-btn\" onClick={() => this.copyToClipboard()}><h4 className=\"black regular\">COPY</h4></button>\n                </div>\n                <h4 className=\"black medium\">OR</h4>\n                <a href={this.getLinkWhastapp('I am interested in this product:' + window.location.href)}><button className=\"primary\" ><h4 className=\"black antique\">SHARE TO WHATSAPP</h4></button></a>\n              </div>\n              <div className='share-popup__actions-group' style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\n                <button className=\"secondary\" onClick={() => this.showPopUp(false)} ><h4 className=\"black antique\">CLOSE</h4></button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"config-castor-wrapper container\">\n          { this.state.showSavingLoader &&\n            <div style={{\n                position: 'fixed',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: '300px',\n                height:\"200px\",\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: '#f4f2ed',\n                zIndex: '10000',\n                border: '1px solid #B5A98C',\n                boxShadow: '1px 1px 7px rgba(0,0,0,0.1)'\n              }}>\n              <h3 style={{ padding: '20px'}} className='black medium'>saving this castor as an image...</h3>\n            </div>  }\n          <h4 className=\"black medium section__title\">Build Your Castor</h4>\n          <div className=\"config-panel\">\n            <div id=\"configContainer\" style={{backgroundColor: 'white'}} ref={el => (this.componentRef = el)}>\n              <div className=\"series-bar\">\n                <h4 className=\"black medium\">\n                  <span className=\"black regular\" style={{marginRight: '8px'}}>{activeDutyName+\" Castors\"}</span>\n                  {activeSeriesName}\n                </h4>\n              </div>\n              <div className=\"config-panel__body row\">\n              <div className=\"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\">\n                <img src={process.env.PUBLIC_URL + activeProductImage} alt=\"\" />\n              </div>\n              <div className=\"config-fields col-lg-5 col-md-6 col-sm-6 col-12\">\n                <div className=\"config-field-dd-material\">\n                  <DropdownMaterial\n                    activeOptionId= {materialOptions[activematerialOptionsId].id} //this will become a state variable\n                    label=\"WHEEL MATERIAL\"\n                    list={materialOptions}\n                    updateWheelConfig={this.updateWheelConfig}\n                  />\n                </div>\n\n                <div className=\"config-field-dd-wheel-dia\">\n                  <DropdownWheelDia\n                    activeOptionId= {activeVital ? activeVital.id : vitalsOptions[0].id   } //this will become a state variable\n                    label={\n                      <div style={{display: 'flex', alignItems: 'center'}}>\n                        <div>WHEEL DIAMETER</div>\n                      { vitalsOptions.some(d => d.showTreadWidthInDD === true) && <h6 className='h6 beige medium' style={{marginLeft: '4px'}}>( thickness )</h6>}\n                        <div style={{display: 'flex', alignItems: 'center', margin: '0 4px'}}><img src={LineArrow} alt=\"<---->\"/></div>\n                        <div>LOAD CAPACITY</div>\n                      </div> }\n                    list={vitalsOptions}\n                    updateWheelConfig={this.updateWheelConfig}\n                  />\n                </div>\n\n                <div className=\"config-fields-vitalsMeta-bracket-quantity\">\n                  <div className=\"wheel-config-meta\">\n                    <div>\n                    <h5 className=\"beige antique\">TOTAL HEIGHT</h5>\n                    <h5 className=\"beige antique\">(wheel + bracket)</h5>\n                    <h4 className=\"black medium\">{activeVital.totalHeight}</h4>\n                    </div>\n                    <div>\n                    <h5 className=\"beige antique\">WHEEL</h5>\n                    <h5 className=\"beige antique\">THICKNESS</h5>\n                    <h4 className=\"black medium\">{activeVital.treadWidth}</h4>\n                    </div>\n                  </div>\n\n                  {\n                    bracketOptions !== null &&\n\n                  <div className=\"config-fields-bracket\">\n                    <Radio\n                      activeOptionId= {bracketOptions[activebracketOptionsId].id} //this will become a state variable\n                      label=\"BRACKET TYPE\"\n                      list={bracketOptions}\n                      updateWheelConfig={this.updateWheelConfig}\n                    />\n\n                    <div className=\"config-fields-bracket-braking\">\n                      <Checkbox\n                      label={bracketOptions[activebracketOptionsId].brakingDescp}\n                      disabledClass={bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\"}\n                      checked={braking}\n                      name=\"braking\"\n                      updateInput ={this.updateInput}\n                      />\n                    </div>\n                  </div>\n                  }\n\n                  {\n                    grooveOptions !== null &&\n\n                    <div className=\"config-fields-groove\">\n                      <Radio\n                        activeOptionId= {grooveOptions[activegrooveOptionsId].id} //this will become a state variable\n                        label=\"GROOVE TYPE\"\n                        list={grooveOptions}\n                        updateWheelConfig={this.updateWheelConfig}\n                      />\n                    </div>\n                  }\n\n                  <div className=\"config-fields-quantity\">\n                    <InputField\n                    label=\"QUANTITY\"\n                    type=\"number\"\n                    name=\"quantity\"\n                    updateInput ={this.updateInput}\n                    min=\"1\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            </div>\n            <div className= \"configure-panel__cta row\">\n              <div className=\"col-lg-7 col-md-6 col-sm-6 col-12 secondary_cta_wrapper\">\n                <div className=\"cta_cont\">\n                  <button className=\"secondary\" onClick={() => this.createImgFromHtml('configContainer')}><h4 className=\"black antique\">SAVE PAGE</h4></button>\n                </div>\n                <ReactToPrint content={() => this.componentRef}>\n                  <PrintContextConsumer>\n                    {({ handlePrint }) => (\n                      <div className=\"cta_cont\">\n                        <button className=\"secondary\" onClick={handlePrint}>\n                          <h4 className=\"black antique\">PRINT PAGE</h4>\n                        </button>\n                      </div>\n                    )}\n                  </PrintContextConsumer>\n                </ReactToPrint>\n                <div className=\"cta_cont\">\n                  <button className=\"secondary\" onClick={() => this.showPopUp(true)}><h4 className=\"black antique\">SHARE</h4></button>\n                </div>\n              </div>\n              <div className=\"col-lg-5 col-md-6 col-sm-6 col-12 primary_cta_wrapper\">\n                <div className=\"cta_cont\">\n                  <button className=\"primary\" onClick={() => this.validateAndAddToCart(this.state, configurableStatus)}><h4 className=\"black antique\">ADD TO QUOTE CART</h4></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n\n\n\n\n\n    );\n  }\n\n}\nexport default ConfigureCastor;\n"]},"metadata":{},"sourceType":"module"}