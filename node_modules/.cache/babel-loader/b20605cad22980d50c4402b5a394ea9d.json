{"ast":null,"code":"var _jsxFileName = \"/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/product-details-page.js\";\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\n\nvar data = require('../data/configure-castor-content.json');\n\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n    var activeMaterialId; //no\n\n    var vitalsOptionsId = 0; //no\n\n    var bracketOptionsId = 0; //no\n\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null; //no\n\n    var urlParts = this.props.location.pathname.split(\"/\"); //no\n\n    var configCode = urlParts[urlParts.length - 1]; //no\n    //\n    // if(this.props.location.state != undefined){\n    //   activeMaterialId = this.props.location.state.activeMaterialId;\n    //   this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    // }else{\n    //\n    // }\n    //\n    //\n    // if(itemCodeSplits.length >= 3){\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"vitalsOptions\")){\n    //       vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"bracketOptions\")){\n    //       bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   if(activeGrooveOptionsId !== null){\n    //     for(let i = 0; i < itemCodeSplits.length; i++){\n    //     console.log(itemCodeSplits[i]);\n    //       if(itemCodeSplits[i].includes(\"grooveOptions\")){\n    //         activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //         break;\n    //       }\n    //     };\n    //   }\n    // }\n\n    this.state = {\n      activeDutyId: itemCodeSplits[0],\n      activeSeriesId: itemCodeSplits[1],\n      // activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId, //no\n      // activevitalsOptionsId: vitalsOptionsId, //no\n      // activebracketOptionsId: bracketOptionsId, //no\n      // activegrooveOptionsId: activeGrooveOptionsId, //no\n      // braking: false, //no\n      activeProductImageIndex: 0,\n      quantity: 0,\n      configurable: false\n    };\n    this.updateWheelConfig = this.updateWheelConfig.bind(this); //prob not\n\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n    this.changeActiveProductImage = this.changeActiveProductImage.bind(this);\n  }\n\n  updateWheelConfig(evt, id, key) {\n    //prob not. this whole function.\n    this.setState({\n      [\"active\" + key + \"Id\"]: evt.currentTarget.dataset.id\n    });\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" && this.setState({\n      braking: false\n    }); //url update\n\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (key !== \"vitalsOptions\") {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    } else {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n\n    for (var i = 0; i < configCodeParts.length; i++) {\n      if (configCodeParts[i].includes(key)) {\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n\n    if (isConfigCodeUpdated) {\n      for (var i = 0; i < configCodeParts.length; i++) {\n        updatedUrl += configCodeParts[i];\n\n        if (i !== configCodeParts.length - 1) {\n          updatedUrl += \"-\";\n        }\n      }\n    } else {\n      updatedUrl = configCode + \"-\" + urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl);\n  }\n\n  updateInput(evt) {\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  }\n\n  validateAndAddToCart(wheelConfig) {\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  changeActiveProductImage(imageIndex) {\n    this.setState({\n      activeProductImageIndex: imageIndex\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          activeDutyId = _this$state.activeDutyId,\n          activeSeriesId = _this$state.activeSeriesId,\n          quantity = _this$state.quantity; //prob not all vars\n\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const productImageSet = productImgPath[activeDuty.code][activeSeries.code][\"712\"];\n    console.log(\"productImageSet\");\n    console.log(productImageSet);\n    var activeProductImage;\n    var imgThumbnails; //if multiple images are available for display, then create thumbnails.\n\n    if (Array.isArray(productImageSet)) {\n      activeProductImage = productImageSet[this.state.activeProductImageIndex];\n      imgThumbnails = productImageSet.map((img, i) => React.createElement(\"button\", {\n        class: \"thumbnail\" + (this.state.activeProductImageIndex === i ? \" active\" : \"\"),\n        key: i,\n        onClick: () => this.changeActiveProductImage(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + img + \"_thumb\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })));\n    } else {\n      activeProductImage = productImageSet;\n      imgThumbnails = null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"config-castor-wrapper only-details-pg container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium section__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Product Details\"), React.createElement(\"div\", {\n      className: \"config-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"series-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black regular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, activeDutyName)), React.createElement(\"div\", {\n      className: \"config-panel__body row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, imgThumbnails !== null && React.createElement(\"div\", {\n      class: \"thumbnailSet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, imgThumbnails), React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + activeProductImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields col-lg-5 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"config-fields-vitalsMeta-bracket-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"black light product-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, activeSeriesName), React.createElement(\"div\", {\n      className: \"product-descp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"beige antique product-specs-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"SPECIFICATIONS\"), React.createElement(\"table\", {\n      className: \"product-specs \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"beige medium table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, data[activeDutyId][activeSeriesId].vitalsOptions[0].vitals.map((vitals, i) => {\n      return React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, vitals.tag);\n    })), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, data[activeDutyId][activeSeriesId].vitalsOptions.map((options, i) => {\n      return React.createElement(\"tr\", {\n        className: \"black antique table-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, options.vitals.map((vitals, i) => {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, vitals.value);\n      }));\n    })))), React.createElement(\"div\", {\n      className: \"config-fields-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      label: \"QUANTITY\",\n      type: \"number\",\n      name: \"quantity\",\n      updateInput: this.updateInput,\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"configure-panel__cta row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-6 col-sm-6 col-12 secondary_cta_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"DOWNLOAD TECHNICAL SPECIFICATIONS\"))), React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"SHARE\")))), React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-6 col-sm-6 col-12 primary_cta_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"REQUEST QUOTE NOW\"))), React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"primary\",\n      onClick: () => this.validateAndAddToCart(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"ADD TO QUOTE CART\")))))));\n  }\n\n}\n\nexport default ProductDetails;","map":{"version":3,"sources":["/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/product-details-page.js"],"names":["React","Component","DropdownMaterial","DropdownWheelDia","InputField","Radio","Checkbox","data","require","productImgPath","ProductDetails","constructor","props","itemCode","match","params","itemCodeSplits","split","activeMaterialId","vitalsOptionsId","bracketOptionsId","activeGrooveOptionsId","hasOwnProperty","urlParts","location","pathname","configCode","length","state","activeDutyId","activeSeriesId","activeProductImageIndex","quantity","configurable","updateWheelConfig","bind","updateInput","validateAndAddToCart","changeActiveProductImage","evt","id","key","setState","currentTarget","dataset","braking","urlUpdateText","materialOptions","activematerialOptionsId","configCodeParts","isConfigCodeUpdated","updatedUrl","i","includes","history","push","value","target","type","checked","name","wheelConfig","updateCart","alert","imageIndex","render","activeDuty","activeDutyName","duty","activeSeries","activeSeriesName","series","productImageSet","code","console","log","activeProductImage","imgThumbnails","Array","isArray","map","img","process","env","PUBLIC_URL","vitalsOptions","vitals","tag","options"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\n\nvar data = require('../data/configure-castor-content.json');\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ProductDetails extends Component{\n\n  constructor(props){\n    super(props)\n\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n\n    var activeMaterialId; //no\n    var vitalsOptionsId = 0; //no\n    var bracketOptionsId = 0; //no\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null; //no\n\n\n    var urlParts = this.props.location.pathname.split(\"/\"); //no\n    var configCode = urlParts[urlParts.length - 1]; //no\n    //\n    // if(this.props.location.state != undefined){\n    //   activeMaterialId = this.props.location.state.activeMaterialId;\n    //   this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    // }else{\n    //\n    // }\n    //\n    //\n    // if(itemCodeSplits.length >= 3){\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"vitalsOptions\")){\n    //       vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"bracketOptions\")){\n    //       bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   if(activeGrooveOptionsId !== null){\n    //     for(let i = 0; i < itemCodeSplits.length; i++){\n    //     console.log(itemCodeSplits[i]);\n    //       if(itemCodeSplits[i].includes(\"grooveOptions\")){\n    //         activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //         break;\n    //       }\n    //     };\n    //   }\n    // }\n\n\n\n\n\n\n    this.state = {\n      activeDutyId:itemCodeSplits[0],\n      activeSeriesId:itemCodeSplits[1],\n      // activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId, //no\n      // activevitalsOptionsId: vitalsOptionsId, //no\n      // activebracketOptionsId: bracketOptionsId, //no\n      // activegrooveOptionsId: activeGrooveOptionsId, //no\n      // braking: false, //no\n      activeProductImageIndex: 0,\n      quantity: 0,\n      configurable: false\n    }\n    this.updateWheelConfig = this.updateWheelConfig.bind(this); //prob not\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n    this.changeActiveProductImage = this.changeActiveProductImage.bind(this);\n\n\n  }\n\n  updateWheelConfig(evt, id, key){ //prob not. this whole function.\n    this.setState({[\"active\"+key+\"Id\"]:evt.currentTarget.dataset.id});\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" &&\n    this.setState({braking: false})\n\n    //url update\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(key !== \"vitalsOptions\"){\n        urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    }else{\n      urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n    for(var i = 0; i < configCodeParts.length; i++){\n      if(configCodeParts[i].includes(key)){\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n    if(isConfigCodeUpdated){\n      for(var i = 0; i < configCodeParts.length; i++){\n        updatedUrl += configCodeParts[i];\n        if(i !== configCodeParts.length-1){\n          updatedUrl += \"-\";\n        }\n\n      }\n    }else{\n        updatedUrl = configCode+\"-\"+urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl);\n\n  }\n\n  updateInput(evt){\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({[evt.target.name]: value});\n  }\n\n  validateAndAddToCart(wheelConfig){\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  changeActiveProductImage(imageIndex){\n    this.setState({activeProductImageIndex:imageIndex})\n  }\n\n\n  render(){\n\n\n    const{activeDutyId, activeSeriesId, quantity} = this.state; //prob not all vars\n\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const productImageSet = productImgPath[activeDuty.code][activeSeries.code][\"712\"];\n    console.log(\"productImageSet\");\n    console.log(productImageSet);\n    var activeProductImage;\n    var imgThumbnails;\n\n    //if multiple images are available for display, then create thumbnails.\n    if(Array.isArray(productImageSet)){\n      activeProductImage = productImageSet[this.state.activeProductImageIndex];\n      imgThumbnails = productImageSet.map((img, i) =>\n\n        <button class={\"thumbnail\"+(this.state.activeProductImageIndex === i ? \" active\" : \"\")}\n                key={i}\n                onClick={()=>this.changeActiveProductImage(i)}>\n          <img src={process.env.PUBLIC_URL + img+\"_thumb\"} alt=\"\" />\n        </button>\n\n      );\n    }else{\n      activeProductImage = productImageSet;\n      imgThumbnails = null;\n    }\n\n\n\n    return(\n\n      <div className=\"config-castor-wrapper only-details-pg container\">\n        <h4 className=\"black medium section__title\">Product Details</h4>\n        <div className=\"config-panel\">\n          <div className=\"series-bar\">\n            <h4 className=\"black regular\">{activeDutyName}</h4>\n          </div>\n          <div className=\"config-panel__body row\">\n            <div className=\"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\">\n\n                {\n                  imgThumbnails !== null &&\n                  <div class=\"thumbnailSet\">\n                  {imgThumbnails}\n                  </div>\n                }\n\n\n              <img src={process.env.PUBLIC_URL + activeProductImage} alt=\"\" />\n            </div>\n            <div className=\"config-fields col-lg-5 col-md-6 col-sm-6 col-12\">\n\n              <div className=\"config-fields-vitalsMeta-bracket-quantity\">\n                <div>\n                  <h2 className=\"black light product-name\">{activeSeriesName}</h2>\n                  <div className=\"product-descp\">\n                    <h4 className=\"black medium\">sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n                    et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud</h4>\n                  </div>\n                </div>\n                <div>\n                  <h4 className=\"beige antique product-specs-label\">SPECIFICATIONS</h4>\n                  <table className=\"product-specs \">\n                    <tr className=\"beige medium table-header\">\n                    { data[activeDutyId][activeSeriesId].vitalsOptions[0].vitals.map((vitals, i) =>{\n                        return(\n\n                                  <th>{vitals.tag}</th>\n\n                        )\n                      })\n                    }\n                    </tr>\n                    <tbody>\n                      { data[activeDutyId][activeSeriesId].vitalsOptions.map((options, i) =>{\n                          return(\n                              <tr className=\"black antique table-row\">\n                              {\n                                options.vitals.map((vitals, i) =>{\n                                  return(\n                                    <td>{vitals.value}</td>\n                                  )\n                                })\n                              }\n                              </tr>\n                          )\n                        })\n                      }\n                    </tbody>\n                  </table>\n                </div>\n\n                <div className=\"config-fields-quantity\">\n                  <InputField\n                  label=\"QUANTITY\"\n                  type=\"number\"\n                  name=\"quantity\"\n                  updateInput ={this.updateInput}\n                  min=\"1\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className= \"configure-panel__cta row\">\n            <div className=\"col-lg-7 col-md-6 col-sm-6 col-12 secondary_cta_wrapper\">\n              <div className=\"cta_cont\">\n                <button class=\"secondary\"><h4 className=\"black antique\">DOWNLOAD TECHNICAL SPECIFICATIONS</h4></button>\n              </div>\n              <div className=\"cta_cont\">\n                <button class=\"secondary\"><h4 className=\"black antique\">SHARE</h4></button>\n              </div>\n            </div>\n            <div className=\"col-lg-5 col-md-6 col-sm-6 col-12 primary_cta_wrapper\">\n              <div className=\"cta_cont\">\n                <button class=\"primary\"><h4 className=\"black antique\">REQUEST QUOTE NOW</h4></button>\n              </div>\n              <div className=\"cta_cont\">\n                <button class=\"primary\" onClick={() => this.validateAndAddToCart(this.state)}><h4 className=\"black antique\">ADD TO QUOTE CART</h4></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n\n    );\n  }\n\n}\nexport default ProductDetails;\n"]},"metadata":{},"sourceType":"module"}