{"ast":null,"code":"var _jsxFileName = \"/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/product-details-page.js\";\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\n\nvar data = require('../data/configure-castor-content.json');\n\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n    var activeMaterialId; //no\n\n    var vitalsOptionsId = 0; //no\n\n    var bracketOptionsId = 0; //no\n\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null; //no\n\n    var urlParts = this.props.location.pathname.split(\"/\"); //no\n\n    var configCode = urlParts[urlParts.length - 1]; //no\n    //\n    // if(this.props.location.state != undefined){\n    //   activeMaterialId = this.props.location.state.activeMaterialId;\n    //   this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    // }else{\n    //\n    // }\n    //\n    //\n    // if(itemCodeSplits.length >= 3){\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"vitalsOptions\")){\n    //       vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"bracketOptions\")){\n    //       bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   if(activeGrooveOptionsId !== null){\n    //     for(let i = 0; i < itemCodeSplits.length; i++){\n    //     console.log(itemCodeSplits[i]);\n    //       if(itemCodeSplits[i].includes(\"grooveOptions\")){\n    //         activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //         break;\n    //       }\n    //     };\n    //   }\n    // }\n\n    this.state = {\n      activeDutyId: itemCodeSplits[0],\n      activeSeriesId: itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      //no\n      activevitalsOptionsId: vitalsOptionsId,\n      //no\n      activebracketOptionsId: bracketOptionsId,\n      //no\n      activegrooveOptionsId: activeGrooveOptionsId,\n      //no\n      braking: false,\n      //no\n      quantity: 0\n    };\n    this.updateWheelConfig = this.updateWheelConfig.bind(this); //prob not\n\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n  }\n\n  updateWheelConfig(evt, id, key) {\n    //prob not. this whole function.\n    this.setState({\n      [\"active\" + key + \"Id\"]: evt.currentTarget.dataset.id\n    });\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" && this.setState({\n      braking: false\n    }); //url update\n\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (key !== \"vitalsOptions\") {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    } else {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n\n    for (var i = 0; i < configCodeParts.length; i++) {\n      if (configCodeParts[i].includes(key)) {\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n\n    if (isConfigCodeUpdated) {\n      for (var i = 0; i < configCodeParts.length; i++) {\n        updatedUrl += configCodeParts[i];\n\n        if (i !== configCodeParts.length - 1) {\n          updatedUrl += \"-\";\n        }\n      }\n    } else {\n      updatedUrl = configCode + \"-\" + urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl); // console.log(urlUpdateText);\n  }\n\n  updateInput(evt) {\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  }\n\n  validateAndAddToCart(wheelConfig) {\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  render() {\n    const _this$state = this.state,\n          activeDutyId = _this$state.activeDutyId,\n          activeSeriesId = _this$state.activeSeriesId,\n          activematerialOptionsId = _this$state.activematerialOptionsId,\n          activevitalsOptionsId = _this$state.activevitalsOptionsId,\n          activebracketOptionsId = _this$state.activebracketOptionsId,\n          activegrooveOptionsId = _this$state.activegrooveOptionsId,\n          braking = _this$state.braking,\n          quantity = _this$state.quantity; //prob not all vars\n\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activeSeries.bracketOptions; //no\n\n    const materialOptions = activeSeries.materialOptions; //no\n\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null; //no\n\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions; //no\n\n    const activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"];\n    return React.createElement(\"div\", {\n      className: \"config-castor-wrapper container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"this is the products details page.\"), React.createElement(\"h4\", {\n      className: \"black medium section__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Build Your Castor\"), React.createElement(\"div\", {\n      className: \"config-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"series-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"black regular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, activeDutyName + \" Castors\"), activeSeriesName)), React.createElement(\"div\", {\n      className: \"config-panel__body row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + activeProductImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields col-lg-5 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"config-field-dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(DropdownMaterial, {\n      activeOptionId: materialOptions[activematerialOptionsId].id //this will become a state variable\n      ,\n      label: \"WHEEL MATERIAL\",\n      list: materialOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-field-dd-wheel-dia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(DropdownWheelDia, {\n      activeOptionId: vitalsOptions[activevitalsOptionsId].id //this will become a state variable\n      ,\n      label: \"WHEEL DIAMETER <----> LOAD CAPACITY\",\n      list: vitalsOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-vitalsMeta-bracket-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wheel-config-meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"TOTAL HEIGHT\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"(wheel + bracket)\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, vitalsOptions[activevitalsOptionsId].totalHeight)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"WHEEL\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"THICKNESS\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, vitalsOptions[activevitalsOptionsId].treadWidth))), React.createElement(\"div\", {\n      className: \"config-fields-bracket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: bracketOptions[activebracketOptionsId].id //this will become a state variable\n      ,\n      label: \"BRACKET TYPE\",\n      list: bracketOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config-fields-bracket-braking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: bracketOptions[activebracketOptionsId].brakingDescp,\n      disabledClass: bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\",\n      checked: braking,\n      name: \"braking\",\n      updateInput: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }))), grooveOptions !== null && React.createElement(\"div\", {\n      className: \"config-fields-groove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: grooveOptions[activegrooveOptionsId].id //this will become a state variable\n      ,\n      label: \"GROOVE TYPE\",\n      list: grooveOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      label: \"QUANTITY\",\n      type: \"number\",\n      name: \"quantity\",\n      updateInput: this.updateInput,\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"configure-panel__cta row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"DOWNLOAD TECHNICAL SPECIIFCATIONS\")), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"SHARE\")), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"REQUEST QUOTE NOW\")), React.createElement(\"button\", {\n      onClick: () => this.validateAndAddToCart(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"ADD TO QUOTE CART\")))));\n  }\n\n}\n\nexport default ProductDetails;","map":{"version":3,"sources":["/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/product-details-page.js"],"names":["React","Component","DropdownMaterial","DropdownWheelDia","InputField","Radio","Checkbox","data","require","productImgPath","ProductDetails","constructor","props","itemCode","match","params","itemCodeSplits","split","activeMaterialId","vitalsOptionsId","bracketOptionsId","activeGrooveOptionsId","hasOwnProperty","urlParts","location","pathname","configCode","length","state","activeDutyId","activeSeriesId","activematerialOptionsId","activevitalsOptionsId","activebracketOptionsId","activegrooveOptionsId","braking","quantity","updateWheelConfig","bind","updateInput","validateAndAddToCart","evt","id","key","setState","currentTarget","dataset","urlUpdateText","materialOptions","configCodeParts","isConfigCodeUpdated","updatedUrl","i","includes","history","push","value","target","type","checked","name","wheelConfig","updateCart","alert","render","activeDuty","activeDutyName","duty","activeSeries","activeSeriesName","series","bracketOptions","grooveOptions","vitalsOptions","activeProductImage","code","process","env","PUBLIC_URL","totalHeight","treadWidth","brakingDescp","brakingType"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\n\nvar data = require('../data/configure-castor-content.json');\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ProductDetails extends Component{\n\n  constructor(props){\n    super(props)\n\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n\n    var activeMaterialId; //no\n    var vitalsOptionsId = 0; //no\n    var bracketOptionsId = 0; //no\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null; //no\n\n\n    var urlParts = this.props.location.pathname.split(\"/\"); //no\n    var configCode = urlParts[urlParts.length - 1]; //no\n    //\n    // if(this.props.location.state != undefined){\n    //   activeMaterialId = this.props.location.state.activeMaterialId;\n    //   this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    // }else{\n    //\n    // }\n    //\n    //\n    // if(itemCodeSplits.length >= 3){\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"vitalsOptions\")){\n    //       vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   for(let i = 0; i < itemCodeSplits.length; i++){\n    //   console.log(itemCodeSplits[i]);\n    //     if(itemCodeSplits[i].includes(\"bracketOptions\")){\n    //       bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //       break;\n    //     }\n    //   };\n    //\n    //   if(activeGrooveOptionsId !== null){\n    //     for(let i = 0; i < itemCodeSplits.length; i++){\n    //     console.log(itemCodeSplits[i]);\n    //       if(itemCodeSplits[i].includes(\"grooveOptions\")){\n    //         activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n    //         break;\n    //       }\n    //     };\n    //   }\n    // }\n\n\n\n\n\n\n    this.state = {\n      activeDutyId:itemCodeSplits[0],\n      activeSeriesId:itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId, //no\n      activevitalsOptionsId: vitalsOptionsId, //no\n      activebracketOptionsId: bracketOptionsId, //no\n      activegrooveOptionsId: activeGrooveOptionsId, //no\n      braking: false, //no\n      quantity: 0\n    }\n    this.updateWheelConfig = this.updateWheelConfig.bind(this); //prob not\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n\n\n  }\n\n  updateWheelConfig(evt, id, key){ //prob not. this whole function.\n    this.setState({[\"active\"+key+\"Id\"]:evt.currentTarget.dataset.id});\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" &&\n    this.setState({braking: false})\n\n    //url update\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(key !== \"vitalsOptions\"){\n        urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    }else{\n      urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n    for(var i = 0; i < configCodeParts.length; i++){\n      if(configCodeParts[i].includes(key)){\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n    if(isConfigCodeUpdated){\n      for(var i = 0; i < configCodeParts.length; i++){\n        updatedUrl += configCodeParts[i];\n        if(i !== configCodeParts.length-1){\n          updatedUrl += \"-\";\n        }\n\n      }\n    }else{\n        updatedUrl = configCode+\"-\"+urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl);\n    // console.log(urlUpdateText);\n\n  }\n\n  updateInput(evt){\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({[evt.target.name]: value});\n  }\n\n  validateAndAddToCart(wheelConfig){\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n\n\n\n  render(){\n\n\n    const{activeDutyId, activeSeriesId, activematerialOptionsId, activevitalsOptionsId, activebracketOptionsId, activegrooveOptionsId, braking, quantity} = this.state; //prob not all vars\n\n\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activeSeries.bracketOptions; //no\n    const materialOptions = activeSeries.materialOptions; //no\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null; //no\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions; //no\n    const activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"];\n    \n    return(\n\n      <div className=\"config-castor-wrapper container\">\n      <div>this is the products details page.</div>\n        <h4 className=\"black medium section__title\">Build Your Castor</h4>\n        <div className=\"config-panel\">\n          <div className=\"series-bar\">\n            <h4 className=\"black medium\"><span className=\"black regular\">{activeDutyName+\" Castors\"}</span>{activeSeriesName}</h4>\n          </div>\n          <div className=\"config-panel__body row\">\n            <div className=\"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\">\n              <img src={process.env.PUBLIC_URL + activeProductImage} alt=\"\" />\n            </div>\n            <div className=\"config-fields col-lg-5 col-md-6 col-sm-6 col-12\">\n              <div className=\"config-field-dd-material\">\n                <DropdownMaterial\n                  activeOptionId= {materialOptions[activematerialOptionsId].id} //this will become a state variable\n                  label=\"WHEEL MATERIAL\"\n                  list={materialOptions}\n                  updateWheelConfig={this.updateWheelConfig}\n                />\n              </div>\n\n              <div className=\"config-field-dd-wheel-dia\">\n                <DropdownWheelDia\n                  activeOptionId= {vitalsOptions[activevitalsOptionsId].id  } //this will become a state variable\n                  label=\"WHEEL DIAMETER <----> LOAD CAPACITY\"\n                  list={vitalsOptions}\n                  updateWheelConfig={this.updateWheelConfig}\n                />\n              </div>\n\n              <div className=\"config-fields-vitalsMeta-bracket-quantity\">\n                <div className=\"wheel-config-meta\">\n                  <div>\n                  <h5 className=\"beige antique\">TOTAL HEIGHT</h5>\n                  <h5 className=\"beige antique\">(wheel + bracket)</h5>\n                  <h4 className=\"black medium\">{vitalsOptions[activevitalsOptionsId].totalHeight}</h4>\n                  </div>\n                  <div>\n                  <h5 className=\"beige antique\">WHEEL</h5>\n                  <h5 className=\"beige antique\">THICKNESS</h5>\n                  <h4 className=\"black medium\">{vitalsOptions[activevitalsOptionsId].treadWidth}</h4>\n                  </div>\n                </div>\n\n                <div className=\"config-fields-bracket\">\n                  <Radio\n                    activeOptionId= {bracketOptions[activebracketOptionsId].id} //this will become a state variable\n                    label=\"BRACKET TYPE\"\n                    list={bracketOptions}\n                    updateWheelConfig={this.updateWheelConfig}\n                  />\n\n                  <div className=\"config-fields-bracket-braking\">\n                    <Checkbox\n                    label={bracketOptions[activebracketOptionsId].brakingDescp}\n                    disabledClass={bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\"}\n                    checked={braking}\n                    name=\"braking\"\n                    updateInput ={this.updateInput}\n                    />\n                  </div>\n                </div>\n\n                {\n                  grooveOptions !== null &&\n\n                  <div className=\"config-fields-groove\">\n                    <Radio\n                      activeOptionId= {grooveOptions[activegrooveOptionsId].id} //this will become a state variable\n                      label=\"GROOVE TYPE\"\n                      list={grooveOptions}\n                      updateWheelConfig={this.updateWheelConfig}\n                    />\n                  </div>\n                }\n\n                <div className=\"config-fields-quantity\">\n                  <InputField\n                  label=\"QUANTITY\"\n                  type=\"number\"\n                  name=\"quantity\"\n                  updateInput ={this.updateInput}\n                  min=\"1\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className= \"configure-panel__cta row\">\n            <button><h4 className=\"black antique\">DOWNLOAD TECHNICAL SPECIIFCATIONS</h4></button>\n            <button><h4 className=\"black antique\">SHARE</h4></button>\n            <button><h4 className=\"black antique\">REQUEST QUOTE NOW</h4></button>\n            <button onClick={() => this.validateAndAddToCart(this.state)}><h4 className=\"black antique\">ADD TO QUOTE CART</h4></button>\n          </div>\n        </div>\n      </div>\n\n\n\n\n\n    );\n  }\n\n}\nexport default ProductDetails;\n"]},"metadata":{},"sourceType":"module"}