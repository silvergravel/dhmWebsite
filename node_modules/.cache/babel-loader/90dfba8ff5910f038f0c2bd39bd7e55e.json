{"ast":null,"code":"var _jsxFileName = \"/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/formComponents/dropdown-material.js\";\nimport React, { Component } from 'react';\nimport onClickOutside from \"react-onclickoutside\";\nimport ChevronDown from \"../../images/chevron-down.svg\";\nimport ChevronUp from \"../../images/chevron-up.svg\";\n\nclass DropdownMaterial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      activeOptionId: this.props.activeOptionId\n    };\n    this.toggleList = this.toggleList.bind(this);\n    this.activateOption = this.activateOption.bind(this);\n  }\n\n  activateOption(evt, id, key) {\n    this.props.updateWheelConfig(evt, id, key); //update wheel configuration in parent\n\n    this.updateActiveOptionId(id, key); //update the active option being displayed in dd\n    // this.setState({listOpen:false}); //shut the dropdown\n  }\n\n  updateActiveOptionId(id) {\n    this.setState({\n      activeOptionId: id\n    });\n  }\n\n  handleClickOutside() {\n    this.setState({\n      listOpen: false\n    });\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          list = _this$props.list,\n          label = _this$props.label;\n    const _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          activeOptionId = _this$state.activeOptionId;\n    return React.createElement(\"div\", {\n      className: \"dd-wrapper dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"dd-select-material\",\n      className: \"beige antique dd-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, label), React.createElement(\"div\", {\n      id: \"dd-select-material\",\n      className: \"dd-select dd-material\",\n      onClick: () => this.toggleList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-activeOption dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-flex-wrapper dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"black light dd-activeTitle dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, list[activeOptionId].material), React.createElement(\"div\", {\n      className: \"dd-chevron dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, listOpen ? React.createElement(\"img\", {\n      src: ChevronUp,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: ChevronDown,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      className: \"black medium dd-activeSubTitle dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, list[activeOptionId].materialDescp)), listOpen && React.createElement(\"ul\", {\n      className: \"dd-list dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, list.map(option => React.createElement(\"li\", {\n      className: list[activeOptionId].material === option.material ? 'dd-list-item dd-material active' : 'dd-list-item dd-material',\n      key: option.material,\n      \"data-id\": option.id,\n      onClick: evt => this.activateOption(evt, option.id, option.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"black light dd-list-item--title dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, option.material), React.createElement(\"h4\", {\n      className: \"black medium dd-list-item--sub-title dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, option.materialDescp))))));\n  }\n\n}\n\nexport default onClickOutside(DropdownMaterial);","map":{"version":3,"sources":["/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/formComponents/dropdown-material.js"],"names":["React","Component","onClickOutside","DropdownMaterial","constructor","props","state","listOpen","activeOptionId","toggleList","bind","activateOption","evt","id","key","updateWheelConfig","updateActiveOptionId","setState","handleClickOutside","prevState","render","list","label","material","ChevronUp","ChevronDown","materialDescp","map","option"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport onClickOutside from \"react-onclickoutside\";\n\nimport ChevronDown from '../../images/chevron-down.svg';\nimport ChevronUp from '../../images/chevron-up.svg';\n\n\nclass DropdownMaterial extends Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      listOpen: false,\n      activeOptionId: this.props.activeOptionId\n    }\n\n\n\n    this.toggleList = this.toggleList.bind(this);\n    this.activateOption = this.activateOption.bind(this);\n  }\n\n  activateOption(evt,id,key){\n\n    this.props.updateWheelConfig(evt,id,key); //update wheel configuration in parent\n    this.updateActiveOptionId(id,key); //update the active option being displayed in dd\n    // this.setState({listOpen:false}); //shut the dropdown\n  }\n\n  updateActiveOptionId(id){\n    this.setState({activeOptionId:id})\n  }\n\n  handleClickOutside(){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  toggleList(){\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  render(){\n\n\n\n    const{list, label} = this.props\n    const{listOpen, activeOptionId} = this.state\n\n    return(\n\n      <div className=\"dd-wrapper dd-material\">\n        <label htmlFor=\"dd-select-material\"className=\"beige antique dd-label\">{label}</label>\n          <div id=\"dd-select-material\"className=\"dd-select dd-material\" onClick={() => this.toggleList()}>\n              <div className=\"dd-activeOption dd-material\">\n                <div className=\"dd-flex-wrapper dd-material\">\n                  <h2 className=\"black light dd-activeTitle dd-material\">{list[activeOptionId].material}</h2>\n                  <div className=\"dd-chevron dd-material\">\n                     {listOpen\n                        ? <img src={ChevronUp} alt=\"\"/>\n                        : <img src={ChevronDown} alt=\"\"/>\n                     }\n                  </div>\n                </div>\n                <h4 className=\"black medium dd-activeSubTitle dd-material\">{list[activeOptionId].materialDescp}</h4>\n              </div>\n              {listOpen &&\n                 <ul className=\"dd-list dd-material\">\n                  {list.map((option) => (\n                   <li className={list[activeOptionId].material === option.material ? 'dd-list-item dd-material active' : 'dd-list-item dd-material'}\n                       key={option.material}\n                       data-id={option.id}\n                       onClick={(evt) => this.activateOption(evt, option.id, option.key)} >\n                   <h2 className=\"black light dd-list-item--title dd-material\">{option.material}</h2>\n                   <h4 className=\"black medium dd-list-item--sub-title dd-material\">{option.materialDescp}</h4>\n                   </li>\n                  ))}\n                </ul>\n              }\n          </div>\n\n\n\n    </div>\n\n    );\n  }\n\n}\n\nexport default onClickOutside(DropdownMaterial);\n"]},"metadata":{},"sourceType":"module"}