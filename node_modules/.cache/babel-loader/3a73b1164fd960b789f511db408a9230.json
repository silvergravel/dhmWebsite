{"ast":null,"code":"var _jsxFileName = \"/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/pages/cart.js\";\nimport React, { Component } from 'react';\n\nvar data = require('../../data/configure-castor-content.json');\n\nvar productImgPath = require('../../data/product-img-path.json');\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container cartItemsListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium section__title section__title--quoteCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Quote Cart\"), this.props.cartItems.map((item, index) => {\n      const selectedDuty = data[item.activeDutyId];\n      const selectedSeries = data[item.activeDutyId][item.activeSeriesId];\n      const selectedSeriesName = selectedSeries.series;\n      const materialOptions = selectedSeries.materialOptions;\n      const selectedMaterial = selectedSeries.materialOptions[item.activematerialOptionsId].material;\n      const selectedWheelDia = selectedSeries.materialOptions[item.activematerialOptionsId].vitalsOptions[item.activevitalsOptionsId].wheelDiameter;\n      const selectedLoadCap = selectedSeries.materialOptions[item.activematerialOptionsId].vitalsOptions[item.activevitalsOptionsId].loadCapacity;\n      const bracketOptions = selectedSeries.bracketOptions;\n      const selectedBracket = selectedSeries.bracketOptions[item.activebracketOptionsId].plateType;\n      const selectedBraking = selectedSeries.bracketOptions[item.activebracketOptionsId].brakingType; //const selectedProductImageUrl = selectedSeries.materialOptions[item.activematerialOptionsId].image;\n\n      const selectedProductImageUrl = productImgPath[selectedDuty.code][selectedSeries.code][materialOptions[item.activematerialOptionsId].code][bracketOptions[item.activebracketOptionsId].code];\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"cartItemBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cartItemBlock__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"black medium seriesName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, selectedSeriesName)), React.createElement(\"div\", {\n        className: \"cartItemBlock__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"itemImgWrapper body__element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + selectedProductImageUrl,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"itemConfigAndActionsWrapper body__element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"itemConfig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"materialConfig config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"beige antique\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"MATERIAL\"), React.createElement(\"h4\", {\n        className: \"black medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, selectedMaterial)), React.createElement(\"div\", {\n        className: \"wheelDiaConfig config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"beige antique\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"WHEEL DIAMETER\"), React.createElement(\"h4\", {\n        className: \"black medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, selectedWheelDia)), React.createElement(\"div\", {\n        className: \"LoadCapConfig config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"beige antique\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"LOAD CAPACITY\"), React.createElement(\"h4\", {\n        className: \"black medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, selectedLoadCap)), React.createElement(\"div\", {\n        className: \"BracketConfig config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"beige antique\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"BRACKET TYPE\"), React.createElement(\"h4\", {\n        className: \"black medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, selectedBracket), selectedBraking !== null && React.createElement(\"h4\", {\n        className: \"black medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"regular\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"with \"), selectedBraking))), React.createElement(\"div\", {\n        className: \"itemActions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"tertiary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"black regular\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"edit\")), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"tertiary\",\n        \"data-id\": index,\n        onClick: e => this.props.deleteCartItem(e.currentTarget.dataset.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"orange regular\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"delete\")))), React.createElement(\"div\", {\n        className: \"itemQtyWrapper body__element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"beige antique\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"QUANTITY\"), React.createElement(\"h2\", {\n        className: \"black light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, item.quantity))));\n    }), React.createElement(\"button\", {\n      className: \"primary confirmCartBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"CONFIRM AND PROCEED TO REQUEST QUOTE\"))));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/pages/cart.js"],"names":["React","Component","data","require","productImgPath","Cart","constructor","props","render","cartItems","map","item","index","selectedDuty","activeDutyId","selectedSeries","activeSeriesId","selectedSeriesName","series","materialOptions","selectedMaterial","activematerialOptionsId","material","selectedWheelDia","vitalsOptions","activevitalsOptionsId","wheelDiameter","selectedLoadCap","loadCapacity","bracketOptions","selectedBracket","activebracketOptionsId","plateType","selectedBraking","brakingType","selectedProductImageUrl","code","process","env","PUBLIC_URL","e","deleteCartItem","currentTarget","dataset","id","quantity"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\n\nvar data = require('../../data/configure-castor-content.json');\nvar productImgPath = require('../../data/product-img-path.json');\n\nclass Cart extends Component{\n\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n\n\n\n    return(\n\n      <div>\n        <div className=\"container cartItemsListWrapper\">\n            <h4 className=\"black medium section__title section__title--quoteCart\">Quote Cart</h4>\n        {this.props.cartItems.map((item, index) => {\n\n          const selectedDuty = data[item.activeDutyId];\n          const selectedSeries = data[item.activeDutyId][item.activeSeriesId];\n          const selectedSeriesName = selectedSeries.series;\n          const materialOptions = selectedSeries.materialOptions;\n          const selectedMaterial = selectedSeries.materialOptions[item.activematerialOptionsId].material;\n          const selectedWheelDia = selectedSeries.materialOptions[item.activematerialOptionsId].vitalsOptions[item.activevitalsOptionsId].wheelDiameter;\n          const selectedLoadCap = selectedSeries.materialOptions[item.activematerialOptionsId].vitalsOptions[item.activevitalsOptionsId].loadCapacity;\n          const bracketOptions = selectedSeries.bracketOptions;\n          const selectedBracket = selectedSeries.bracketOptions[item.activebracketOptionsId].plateType;\n          const selectedBraking = selectedSeries.bracketOptions[item.activebracketOptionsId].brakingType;\n          //const selectedProductImageUrl = selectedSeries.materialOptions[item.activematerialOptionsId].image;\n          const selectedProductImageUrl = productImgPath[selectedDuty.code][selectedSeries.code][materialOptions[item.activematerialOptionsId].code][bracketOptions[item.activebracketOptionsId].code];\n\n          return(\n            <div key={index} className=\"cartItemBlock\">\n              <div className=\"cartItemBlock__header\">\n                <h4 className=\"black medium seriesName\">{selectedSeriesName}</h4>\n              </div>\n              <div className=\"cartItemBlock__body\">\n                <div className=\"itemImgWrapper body__element\">\n                  <img src={process.env.PUBLIC_URL + selectedProductImageUrl} alt=\"\" />\n                </div>\n                <div className=\"itemConfigAndActionsWrapper body__element\">\n                  <div className=\"itemConfig\">\n                    <div className=\"materialConfig config\">\n                      <h4 className=\"beige antique\">MATERIAL</h4>\n                      <h4 className=\"black medium\">{selectedMaterial}</h4>\n                    </div>\n                    <div className=\"wheelDiaConfig config\">\n                    <h4 className=\"beige antique\">WHEEL DIAMETER</h4>\n                    <h4 className=\"black medium\">{selectedWheelDia}</h4>\n                    </div>\n                    <div className=\"LoadCapConfig config\">\n                    <h4 className=\"beige antique\">LOAD CAPACITY</h4>\n                    <h4 className=\"black medium\">{selectedLoadCap}</h4>\n                    </div>\n                    <div className=\"BracketConfig config\">\n                    <h4 className=\"beige antique\">BRACKET TYPE</h4>\n                    <h4 className=\"black medium\">{selectedBracket}</h4>\n                    {selectedBraking !== null && <h4 className=\"black medium\"><span className=\"regular\">with </span>{selectedBraking}</h4>}\n                    </div>\n                  </div>\n                  <div className=\"itemActions\">\n                    <button className=\"tertiary\">\n                      <h4 className=\"black regular\">edit</h4>\n                    </button>\n                    <div className=\"divider\"></div>\n                    <button className=\"tertiary\" data-id={index} onClick={(e) => this.props.deleteCartItem(e.currentTarget.dataset.id)}>\n                      <h4 className=\"orange regular\">delete</h4>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"itemQtyWrapper body__element\">\n                  <h4 className=\"beige antique\">QUANTITY</h4>\n                  <h2 className=\"black light\">{item.quantity}</h2>\n                </div>\n              </div>\n            </div>\n          )\n\n        })}\n        <button className=\"primary confirmCartBtn\"><h4 className=\"black antique\">CONFIRM AND PROCEED TO REQUEST QUOTE</h4></button>\n        </div>\n\n      </div>\n\n\n    );\n  }\n\n}\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}