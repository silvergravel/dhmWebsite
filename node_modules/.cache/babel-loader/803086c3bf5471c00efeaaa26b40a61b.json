{"ast":null,"code":"var _jsxFileName = \"/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/formComponents/radio.js\";\nimport React, { Component } from 'react';\n\nclass Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeOptionId: this.props.activeOptionId\n    };\n    this.activateOption = this.activateOption.bind(this);\n  }\n\n  activateOption(evt, id, key) {\n    this.props.updateWheelConfig(evt, id, key); //update wheel configuration in parent\n\n    this.updateActiveOptionId(id, key); //update the active option being displayed in dd\n  }\n\n  updateActiveOptionId(id) {\n    this.setState({\n      activeOptionId: id\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          list = _this$props.list,\n          label = _this$props.label;\n    const activeOptionId = this.state.activeOptionId; //i have wrongly used the terminology 'plattype' when actually, the 'type' here is agnostic to plate OR groove.\n    //but i aint changing it now.\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"radio-list-bracket\",\n      className: \"beige antique radio-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, label), React.createElement(\"ul\", {\n      id: \"radio-list-bracket\",\n      className: \"radio-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, list.map(option => React.createElement(\"li\", {\n      className: list[activeOptionId].plateType === option.plateType ? 'radio-list-item plate-type active' : 'radio-list-item plate-type',\n      key: option.plateType,\n      \"data-id\": option.id,\n      onClick: evt => this.activateOption(evt, option.id, option.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"black light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, option.plateType))))));\n  }\n\n}\n\nexport default Radio;","map":{"version":3,"sources":["/Users/silvergravel/Documents/work_2017/dhmWheels/dhmWebsite/src/components/formComponents/radio.js"],"names":["React","Component","Radio","constructor","props","state","activeOptionId","activateOption","bind","evt","id","key","updateWheelConfig","updateActiveOptionId","setState","render","list","label","map","option","plateType"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,KAAN,SAAoBD,SAApB,CAA6B;AAE3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE;AADhB,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACE,GAAD,EAAKC,EAAL,EAAQC,GAAR,EAAY;AAExB,SAAKP,KAAL,CAAWQ,iBAAX,CAA6BH,GAA7B,EAAiCC,EAAjC,EAAoCC,GAApC,EAFwB,CAEkB;;AAC1C,SAAKE,oBAAL,CAA0BH,EAA1B,EAA6BC,GAA7B,EAHwB,CAGW;AACpC;;AAEDE,EAAAA,oBAAoB,CAACH,EAAD,EAAI;AACtB,SAAKI,QAAL,CAAc;AAACR,MAAAA,cAAc,EAACI;AAAhB,KAAd;AACD;;AAGDK,EAAAA,MAAM,GAAE;AAAA,wBAEe,KAAKX,KAFpB;AAAA,UAEAY,IAFA,eAEAA,IAFA;AAAA,UAEMC,KAFN,eAEMA,KAFN;AAAA,UAGAX,cAHA,GAGkB,KAAKD,KAHvB,CAGAC,cAHA,EAIN;AACA;;AACA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,oBAAf;AAAoC,MAAA,SAAS,EAAC,2BAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2EW,KAA3E,CADF,EAEW;AAAI,MAAA,EAAE,EAAC,oBAAP;AAA4B,MAAA,SAAS,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,IAAI,CAACE,GAAL,CAAUC,MAAD,IACT;AAAI,MAAA,SAAS,EAAEH,IAAI,CAACV,cAAD,CAAJ,CAAqBc,SAArB,KAAmCD,MAAM,CAACC,SAA1C,GAAsD,mCAAtD,GAA4F,4BAA3G;AACI,MAAA,GAAG,EAAED,MAAM,CAACC,SADhB;AAEI,iBAASD,MAAM,CAACT,EAFpB;AAGI,MAAA,OAAO,EAAGD,GAAD,IAAS,KAAKF,cAAL,CAAoBE,GAApB,EAAyBU,MAAM,CAACT,EAAhC,EAAoCS,MAAM,CAACR,GAA3C,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BQ,MAAM,CAACC,SAApC,CADH,CAJJ,CADA,CADF,CAFX,CAFF;AAoBD;;AAjD0B;;AAoD7B,eAAelB,KAAf","sourcesContent":["\nimport React, { Component } from 'react';\n\n\nclass Radio extends Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      activeOptionId: this.props.activeOptionId\n\n    }\n\n    this.activateOption = this.activateOption.bind(this);\n  }\n\n  activateOption(evt,id,key){\n\n    this.props.updateWheelConfig(evt,id,key); //update wheel configuration in parent\n    this.updateActiveOptionId(id,key); //update the active option being displayed in dd\n  }\n\n  updateActiveOptionId(id){\n    this.setState({activeOptionId:id})\n  }\n\n\n  render(){\n\n    const{list, label} = this.props\n    const{activeOptionId} = this.state\n    //i have wrongly used the terminology 'plattype' when actually, the 'type' here is agnostic to plate OR groove.\n    //but i aint changing it now.\n    return(\n\n      <div>\n        <label htmlFor=\"radio-list-bracket\" className=\"beige antique radio-label\">{label}</label>\n                 <ul id=\"radio-list-bracket\" className=\"radio-list\">\n                  {list.map((option) => (\n                   <li className={list[activeOptionId].plateType === option.plateType ? 'radio-list-item plate-type active' : 'radio-list-item plate-type'}\n                       key={option.plateType}\n                       data-id={option.id}\n                       onClick={(evt) => this.activateOption(evt, option.id, option.key)} >\n                       <div>\n                          <h2 className=\"black light\">{option.plateType}</h2>\n                       </div>\n                   </li>\n                  ))}\n                </ul>\n\n    </div>\n\n    );\n  }\n\n}\nexport default Radio;\n"]},"metadata":{},"sourceType":"module"}