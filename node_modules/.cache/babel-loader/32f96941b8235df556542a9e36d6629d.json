{"ast":null,"code":"var _jsxFileName = \"/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/pages/contact.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Arrows from \"../../images/arrows-left.svg\";\n\nvar data = require('../../data/configure-castor-content.json');\n\nvar productImgPath = require('../../data/product-img-path.json');\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    if (typeof this.props.location.requestQuoteFlow !== 'undefined') {\n      this.createQuoteCartFields = true;\n    } else {\n      this.createQuoteCartFields = false;\n    }\n  }\n\n  render(props) {\n    console.log(\"should i create quote cart fields?\");\n    var castorDutyIds = ['ld', 'md', 'hd'];\n    var items = this.props.cartItems;\n    var itemStrings = [];\n\n    for (var i = 0; i < items.length; i++) {\n      //if it is a castor, then fetch all the 'castor pattern' related details\n      if (castorDutyIds.includes(items[i].activeDutyId)) {\n        var it = items[i];\n        const selectedSeries = data[it.activeDutyId][it.activeSeriesId];\n        const selectedSeriesName = selectedSeries.series;\n        const materialOptions = selectedSeries.materialOptions;\n        const selectedMaterial = selectedSeries.materialOptions[it.activematerialOptionsId].material;\n        const selectedWheelDia = selectedSeries.materialOptions[it.activematerialOptionsId].vitalsOptions[it.activevitalsOptionsId].wheelDiameter;\n        const selectedLoadCap = selectedSeries.materialOptions[it.activematerialOptionsId].vitalsOptions[it.activevitalsOptionsId].loadCapacity;\n        const bracketOptions = selectedSeries.bracketOptions;\n        const selectedBracket = selectedSeries.bracketOptions[it.activebracketOptionsId].plateType;\n        const selectedBraking = selectedSeries.bracketOptions[it.activebracketOptionsId].brakingType;\n        const selectedGroove = it.activegrooveOptionsId !== null ? selectedSeries.grooveOptions[it.activebracketOptionsId].plateType : \"\";\n        var temp = \"SERIES: \" + selectedSeriesName + \" \\n \" + \"MATERIAL: \" + selectedMaterial + \" \\n \" + \"WHEEL DIA: \" + selectedWheelDia + \" -----> (\" + selectedLoadCap + \") \\n \" + \"BRACKET: \" + selectedBracket + \" \\n \" + \"BRAKING: \" + selectedBraking + \" \\n \" + \"GROOVE: \" + selectedGroove + \" \\n \" + \"___________________________________________________\" + \"---------------------------------------------------\";\n        itemStrings.push(temp);\n      } else {//else it would be a non-castor, so fetch all 'non-castor pattern' related details.\n      }\n\n      itemStrings.join(\"\");\n      console.log(\"itemStrings\");\n      console.log(itemStrings);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container contact-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.createQuoteCartFields === true && React.createElement(Link, {\n      to: \"/my-quote-cart\",\n      className: \"back-to-cart-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Arrows,\n      alt: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"orange regular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Go Back to Cart\")), React.createElement(\"h4\", {\n      className: \"black medium section__title contact-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(\"h3\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Please provide a few contact details below, so that we know how to get back to you.\")), React.createElement(\"form\", {\n      name: \"contact\",\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"hidden\",\n      name: \"form-name\",\n      value: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"FULL NAME*\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      required: \"required\",\n      placeholder: \"Ramesh Bharat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"PHONE NUMBER*\", React.createElement(\"input\", {\n      type: \"tel\",\n      name: \"tel\",\n      required: \"required\",\n      placeholder: \"99999 99999\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"EMAIL ADDRESS*\", React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      required: \"required\",\n      placeholder: \"ramesh@mail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"MESSAGE, QUERIES, QUESTIONS (optional)\", React.createElement(\"textarea\", {\n      name: \"message\",\n      placeholder: \"Write your queries or questions here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), this.createQuoteCartFields === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"hidden-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"MESSAGE, QUERIES, QUESTIONS (optional)\", React.createElement(\"textarea\", {\n      name: \"cart-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"}\")))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Send\")))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/pages/contact.js"],"names":["React","Component","Link","data","require","productImgPath","Contact","constructor","props","location","requestQuoteFlow","createQuoteCartFields","render","console","log","castorDutyIds","items","cartItems","itemStrings","i","length","includes","activeDutyId","it","selectedSeries","activeSeriesId","selectedSeriesName","series","materialOptions","selectedMaterial","activematerialOptionsId","material","selectedWheelDia","vitalsOptions","activevitalsOptionsId","wheelDiameter","selectedLoadCap","loadCapacity","bracketOptions","selectedBracket","activebracketOptionsId","plateType","selectedBraking","brakingType","selectedGroove","activegrooveOptionsId","grooveOptions","temp","push","join","Arrows"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Arrows from '../../images/arrows-left.svg'\n\nvar data = require('../../data/configure-castor-content.json');\nvar productImgPath = require('../../data/product-img-path.json');\n\n\nclass Contact extends Component{\n\n  constructor(props){\n    super(props)\n\n    if(typeof this.props.location.requestQuoteFlow !== 'undefined'){\n        this.createQuoteCartFields = true;\n\n    }else{\n        this.createQuoteCartFields = false ;\n    }\n\n\n  }\n\n  render(props){\n\n    console.log(\"should i create quote cart fields?\");\n    var castorDutyIds = ['ld','md','hd'];\n    var items = this.props.cartItems;\n    var itemStrings =[];\n\n\n    for(var i = 0 ; i < items.length; i++){\n\n      //if it is a castor, then fetch all the 'castor pattern' related details\n      if(castorDutyIds.includes(items[i].activeDutyId)){\n        var it = items[i];\n        const selectedSeries = data[it.activeDutyId][it.activeSeriesId];\n        const selectedSeriesName = selectedSeries.series;\n        const materialOptions = selectedSeries.materialOptions;\n        const selectedMaterial = selectedSeries.materialOptions[it.activematerialOptionsId].material;\n        const selectedWheelDia = selectedSeries.materialOptions[it.activematerialOptionsId].vitalsOptions[it.activevitalsOptionsId].wheelDiameter;\n        const selectedLoadCap = selectedSeries.materialOptions[it.activematerialOptionsId].vitalsOptions[it.activevitalsOptionsId].loadCapacity;\n        const bracketOptions = selectedSeries.bracketOptions;\n        const selectedBracket = selectedSeries.bracketOptions[it.activebracketOptionsId].plateType;\n        const selectedBraking = selectedSeries.bracketOptions[it.activebracketOptionsId].brakingType;\n        const selectedGroove = it.activegrooveOptionsId !== null ? selectedSeries.grooveOptions[it.activebracketOptionsId].plateType : \"\";\n\n        var temp =  \"SERIES: \"    + selectedSeriesName + \" \\n \"\n                  + \"MATERIAL: \"  + selectedMaterial   + \" \\n \"\n                  + \"WHEEL DIA: \" + selectedWheelDia   + \" -----> (\" + selectedLoadCap + \") \\n \"\n                  + \"BRACKET: \"   + selectedBracket    + \" \\n \"\n                  + \"BRAKING: \"   + selectedBraking    + \" \\n \"\n                  + \"GROOVE: \"    + selectedGroove     + \" \\n \"\n                  + \"___________________________________________________\"\n                  + \"---------------------------------------------------\";\n        itemStrings.push(temp);\n      }else{\n        //else it would be a non-castor, so fetch all 'non-castor pattern' related details.\n      }\n      itemStrings.join(\"\");\n      console.log(\"itemStrings\");\n      console.log(itemStrings);\n\n    }\n\n    return(\n      <div>\n      <div className=\"container contact-page-container\">\n      <div className=\"form-header\">\n      {\n        this.createQuoteCartFields === true &&\n        <Link to=\"/my-quote-cart\" className=\"back-to-cart-btn\">\n        <img src={Arrows} alt=\"arrows\"/><h4 className=\"orange regular\">Go Back to Cart</h4>\n        </Link>\n      }\n\n        <h4 className=\"black medium section__title contact-page\">Contact</h4>\n        <h3 className=\"black medium\">Please provide a few contact details below,\n        so that we know how to get back to you.</h3>\n      </div>\n      <form name=\"contact\" method=\"post\">\n          <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n          <p>\n            <label class=\"beige antique\">FULL NAME*<input type=\"text\" name=\"name\" required=\"required\" placeholder=\"Ramesh Bharat\"/></label>\n          </p>\n          <p>\n            <label class=\"beige antique\">PHONE NUMBER*\n            <input type=\"tel\" name=\"tel\"  required=\"required\" placeholder=\"99999 99999\"/></label>\n          </p>\n          <p>\n            <label class=\"beige antique\">EMAIL ADDRESS*<input type=\"email\" name=\"email\" required=\"required\" placeholder=\"ramesh@mail.com\"/></label>\n          </p>\n          <p>\n            <label class=\"beige antique\">MESSAGE, QUERIES, QUESTIONS (optional)\n            <textarea name=\"message\" placeholder=\"Write your queries or questions here...\"></textarea></label>\n          </p>\n          {\n\n            this.createQuoteCartFields === true &&\n              <div>\n              <p className=\"hidden-field\">\n              <label class=\"beige antique\">MESSAGE, QUERIES, QUESTIONS (optional)\n                <textarea name=\"cart-items\">\n              {\n                // this.props.cartItems.map((item, index) => {\n\n                //   return(\n                //\n                //       <div>\n                //           {selectedSeriesName\n                //             +\"\\n\"\n                //             +selectedMaterial\n                //           }\n                //       </div>\n                //\n                //\n                //   )\n                // })\n\n\n                }\n              }\n              </textarea>\n            </label>\n              </p>\n              </div>\n\n\n          }\n\n          <p>\n            <button type=\"submit\">Send</button>\n          </p>\n        </form>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}