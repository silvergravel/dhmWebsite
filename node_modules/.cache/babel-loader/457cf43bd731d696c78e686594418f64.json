{"ast":null,"code":"var _jsxFileName = \"/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/configure-castor-page.js\";\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\nimport LineArrow from \"../images/lineArrow.svg\";\nimport ReactToPrint, { PrintContextConsumer } from 'react-to-print';\nimport ReactToPdf from 'react-to-pdf';\n\nvar data = require('../data/configure-castor-content.json');\n\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ConfigureCastor extends Component {\n  constructor(props) {\n    super(props);\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n    var activeMaterialId;\n    var vitalsOptionsId = 0;\n    var bracketOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"bracketOptions\") === true ? 0 : null;\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null;\n    var configurable = data[itemCodeSplits[0]][itemCodeSplits[1]].configurable;\n    console.log(\"configurable: \" + configurable);\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (this.props.location.state != undefined) {\n      activeMaterialId = this.props.location.state.activeMaterialId;\n      this.props.history.push(configCode + \"-materialOptions:\" + activeMaterialId);\n    } else {\n      activeMaterialId = \"chello\";\n    }\n\n    console.log(\"active material id: \" + activeMaterialId);\n\n    if (itemCodeSplits.length >= 3) {\n      for (let i = 0; i < itemCodeSplits.length; i++) {\n        console.log(itemCodeSplits[i]);\n\n        if (itemCodeSplits[i].includes(\"vitalsOptions\")) {\n          vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      }\n\n      ;\n\n      for (let i = 0; i < itemCodeSplits.length; i++) {\n        console.log(itemCodeSplits[i]);\n\n        if (itemCodeSplits[i].includes(\"bracketOptions\")) {\n          bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      }\n\n      ;\n\n      if (activeGrooveOptionsId !== null) {\n        for (let i = 0; i < itemCodeSplits.length; i++) {\n          console.log(itemCodeSplits[i]);\n\n          if (itemCodeSplits[i].includes(\"grooveOptions\")) {\n            activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n            break;\n          }\n        }\n\n        ;\n      }\n    }\n\n    this.state = {\n      activeDutyId: itemCodeSplits[0],\n      activeSeriesId: itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      activevitalsOptionsId: vitalsOptionsId,\n      activebracketOptionsId: bracketOptionsId,\n      activegrooveOptionsId: activeGrooveOptionsId,\n      braking: false,\n      quantity: 0,\n      configurable: true\n    };\n    this.updateWheelConfig = this.updateWheelConfig.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n  }\n\n  updateWheelConfig(evt, id, key) {\n    this.setState({\n      [\"active\" + key + \"Id\"]: evt.currentTarget.dataset.id\n    });\n    console.log(\"key is \" + key);\n    console.log(\"id \" + evt.currentTarget.dataset.id);\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" && this.setState({\n      braking: false\n    }); //url update\n\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if (key !== \"vitalsOptions\") {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    } else {\n      urlUpdateText = key + \":\" + data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n\n    for (var i = 0; i < configCodeParts.length; i++) {\n      if (configCodeParts[i].includes(key)) {\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n\n    if (isConfigCodeUpdated) {\n      for (var i = 0; i < configCodeParts.length; i++) {\n        updatedUrl += configCodeParts[i];\n        console.log(\"i is: \" + i);\n\n        if (i !== configCodeParts.length - 1) {\n          updatedUrl += \"-\";\n        }\n      }\n    } else {\n      updatedUrl = configCode + \"-\" + urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl); // console.log(urlUpdateText);\n  }\n\n  updateInput(evt) {\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({\n      [evt.target.name]: value\n    });\n  }\n\n  validateAndAddToCart(wheelConfig, configurableStatus) {\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig, configurableStatus) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n  render() {\n    console.log(\"vmo: \" + this.state.activevitalsOptionsId);\n    const _this$state = this.state,\n          activeDutyId = _this$state.activeDutyId,\n          activeSeriesId = _this$state.activeSeriesId,\n          activematerialOptionsId = _this$state.activematerialOptionsId,\n          activevitalsOptionsId = _this$state.activevitalsOptionsId,\n          activebracketOptionsId = _this$state.activebracketOptionsId,\n          activegrooveOptionsId = _this$state.activegrooveOptionsId,\n          braking = _this$state.braking,\n          quantity = _this$state.quantity;\n    const configurableStatus = data[activeDutyId][activeSeriesId].configurable;\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activebracketOptionsId !== null ? activeSeries.bracketOptions : null;\n    const materialOptions = activeSeries.materialOptions;\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null;\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions;\n    var activeProductImage;\n    activegrooveOptionsId !== null ? activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][grooveOptions[activegrooveOptionsId].code][\"712\"] : activebracketOptionsId !== null ? activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"] : activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][\"712\"];\n    ;\n    let activeVital = vitalsOptions[activevitalsOptionsId] ? vitalsOptions[activevitalsOptionsId] : vitalsOptions[0];\n    const toDownloadRef = React.createRef();\n    return React.createElement(\"div\", {\n      className: \"config-castor-wrapper container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium section__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Build Your Castor\"), React.createElement(\"div\", {\n      className: \"config-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: toDownloadRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.componentRef = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"series-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"black regular\",\n      style: {\n        marginRight: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, activeDutyName + \" Castors\"), activeSeriesName)), React.createElement(\"div\", {\n      className: \"config-panel__body row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + activeProductImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields col-lg-5 col-md-6 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"config-field-dd-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(DropdownMaterial, {\n      activeOptionId: materialOptions[activematerialOptionsId].id //this will become a state variable\n      ,\n      label: \"WHEEL MATERIAL\",\n      list: materialOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-field-dd-wheel-dia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(DropdownWheelDia, {\n      activeOptionId: activeVital ? activeVital.id : vitalsOptions[0].id //this will become a state variable\n      ,\n      label: React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"WHEEL DIAMETER\"), vitalsOptions.some(d => d.showTreadWidthInDD === true) && React.createElement(\"h6\", {\n        className: \"h6 beige medium\",\n        style: {\n          marginLeft: '4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"( thickness )\"), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: LineArrow,\n        alt: \"<---->\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"LOAD CAPACITY\")),\n      list: vitalsOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-vitalsMeta-bracket-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wheel-config-meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"TOTAL HEIGHT\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"(wheel + bracket)\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, activeVital.totalHeight)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"WHEEL\"), React.createElement(\"h5\", {\n      className: \"beige antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"THICKNESS\"), React.createElement(\"h4\", {\n      className: \"black medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, activeVital.treadWidth))), bracketOptions !== null && React.createElement(\"div\", {\n      className: \"config-fields-bracket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: bracketOptions[activebracketOptionsId].id //this will become a state variable\n      ,\n      label: \"BRACKET TYPE\",\n      list: bracketOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config-fields-bracket-braking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: bracketOptions[activebracketOptionsId].brakingDescp,\n      disabledClass: bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\",\n      checked: braking,\n      name: \"braking\",\n      updateInput: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), grooveOptions !== null && React.createElement(\"div\", {\n      className: \"config-fields-groove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      activeOptionId: grooveOptions[activegrooveOptionsId].id //this will become a state variable\n      ,\n      label: \"GROOVE TYPE\",\n      list: grooveOptions,\n      updateWheelConfig: this.updateWheelConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"config-fields-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      label: \"QUANTITY\",\n      type: \"number\",\n      name: \"quantity\",\n      updateInput: this.updateInput,\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"configure-panel__cta row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-6 col-sm-6 col-12 secondary_cta_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(ReactToPdf, {\n      targetRef: toDownloadRef,\n      options: {\n        orientation: 'landscape'\n      },\n      filename: \"dhmwheels_product.pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, ({\n      toPdf\n    }) => React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      onClick: toPdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"SAVE PAGE\")))), React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"SHARE\"))), React.createElement(ReactToPrint, {\n      content: () => this.componentRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(PrintContextConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, ({\n      handlePrint\n    }) => React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"secondary\",\n      onClick: handlePrint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"PRINT PAGE\")))))), React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-6 col-sm-6 col-12 primary_cta_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"REQUEST QUOTE NOW\"))), React.createElement(\"div\", {\n      className: \"cta_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"primary\",\n      onClick: () => this.validateAndAddToCart(this.state, configurableStatus),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"black antique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"ADD TO QUOTE CART\")))))));\n  }\n\n}\n\nexport default ConfigureCastor;","map":{"version":3,"sources":["/Users/abrarburk/Documents/work_2017/dhmWheels/dhmWebsite/src/components/configure-castor-page.js"],"names":["React","Component","DropdownMaterial","DropdownWheelDia","InputField","Radio","Checkbox","ReactToPrint","PrintContextConsumer","ReactToPdf","data","require","productImgPath","ConfigureCastor","constructor","props","itemCode","match","params","itemCodeSplits","split","activeMaterialId","vitalsOptionsId","bracketOptionsId","hasOwnProperty","activeGrooveOptionsId","configurable","console","log","urlParts","location","pathname","configCode","length","state","undefined","history","push","i","includes","activeDutyId","activeSeriesId","activematerialOptionsId","activevitalsOptionsId","activebracketOptionsId","activegrooveOptionsId","braking","quantity","updateWheelConfig","bind","updateInput","validateAndAddToCart","evt","id","key","setState","currentTarget","dataset","urlUpdateText","materialOptions","configCodeParts","isConfigCodeUpdated","updatedUrl","value","target","type","checked","name","wheelConfig","configurableStatus","updateCart","alert","render","activeDuty","activeDutyName","duty","activeSeries","activeSeriesName","series","bracketOptions","grooveOptions","vitalsOptions","activeProductImage","code","activeVital","toDownloadRef","createRef","el","componentRef","marginRight","process","env","PUBLIC_URL","display","alignItems","some","d","showTreadWidthInDD","marginLeft","margin","LineArrow","totalHeight","treadWidth","brakingDescp","brakingType","orientation","toPdf","handlePrint"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport DropdownMaterial from './formComponents/dropdown-material';\nimport DropdownWheelDia from './formComponents/dropdown-wheelDia';\nimport InputField from './formComponents/input-field';\nimport Radio from './formComponents/radio';\nimport Checkbox from './formComponents/checkbox';\nimport LineArrow from '../images/lineArrow.svg';\nimport ReactToPrint, {PrintContextConsumer} from 'react-to-print';\nimport ReactToPdf from 'react-to-pdf';\n\nvar data = require('../data/configure-castor-content.json');\nvar productImgPath = require('../data/product-img-path.json');\n\nclass ConfigureCastor extends Component{\n\n  constructor(props){\n    super(props)\n\n    var itemCode = this.props.match.params.itemCode;\n    var itemCodeSplits = itemCode.split(\"-\");\n\n    var activeMaterialId;\n    var vitalsOptionsId = 0;\n\n    var bracketOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"bracketOptions\") === true ? 0 : null;\n    var activeGrooveOptionsId = data[itemCodeSplits[0]][itemCodeSplits[1]].hasOwnProperty(\"grooveOptions\") === true ? 0 : null;\n    var configurable = data[itemCodeSplits[0]][itemCodeSplits[1]].configurable;\n    console.log(\"configurable: \"+configurable);\n\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(this.props.location.state != undefined){\n      activeMaterialId = this.props.location.state.activeMaterialId;\n      this.props.history.push(configCode+\"-materialOptions:\"+activeMaterialId);\n    }else{\n      activeMaterialId = \"chello\";\n    }\n\n    console.log(\"active material id: \"+activeMaterialId);\n\n    if(itemCodeSplits.length >= 3){\n      for(let i = 0; i < itemCodeSplits.length; i++){\n      console.log(itemCodeSplits[i]);\n        if(itemCodeSplits[i].includes(\"vitalsOptions\")){\n          vitalsOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      };\n\n      for(let i = 0; i < itemCodeSplits.length; i++){\n      console.log(itemCodeSplits[i]);\n        if(itemCodeSplits[i].includes(\"bracketOptions\")){\n          bracketOptionsId = itemCodeSplits[i].split(\":\")[1];\n          break;\n        }\n      };\n\n      if(activeGrooveOptionsId !== null){\n        for(let i = 0; i < itemCodeSplits.length; i++){\n        console.log(itemCodeSplits[i]);\n          if(itemCodeSplits[i].includes(\"grooveOptions\")){\n            activeGrooveOptionsId = itemCodeSplits[i].split(\":\")[1];\n            break;\n          }\n        };\n      }\n    }\n\n\n\n\n\n\n    this.state = {\n      activeDutyId:itemCodeSplits[0],\n      activeSeriesId:itemCodeSplits[1],\n      activematerialOptionsId: itemCodeSplits.length >= 3 ? itemCodeSplits[2].split(\":\")[1] : activeMaterialId,\n      activevitalsOptionsId: vitalsOptionsId,\n      activebracketOptionsId: bracketOptionsId,\n      activegrooveOptionsId: activeGrooveOptionsId,\n      braking: false,\n      quantity: 0,\n      configurable: true\n    }\n    this.updateWheelConfig = this.updateWheelConfig.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.validateAndAddToCart = this.validateAndAddToCart.bind(this);\n\n\n  }\n\n  updateWheelConfig(evt, id, key){\n    this.setState({[\"active\"+key+\"Id\"]:evt.currentTarget.dataset.id});\n    console.log(\"key is \"+key);\n    console.log(\"id \"+evt.currentTarget.dataset.id);\n    key === \"bracketOptions\" && evt.currentTarget.dataset.id === \"0\" &&\n    this.setState({braking: false})\n\n    //url update\n    var urlUpdateText;\n    var urlParts = this.props.location.pathname.split(\"/\");\n    var configCode = urlParts[urlParts.length - 1];\n\n    if(key !== \"vitalsOptions\"){\n        urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId][key][evt.currentTarget.dataset.id].id;\n    }else{\n      urlUpdateText = key+\":\"+data[this.state.activeDutyId][this.state.activeSeriesId].materialOptions[this.state.activematerialOptionsId][key][evt.currentTarget.dataset.id].id;\n    }\n\n\n    var configCodeParts = configCode.split(\"-\");\n    var isConfigCodeUpdated = false;\n    var updatedUrl = \"\";\n    for(var i = 0; i < configCodeParts.length; i++){\n      if(configCodeParts[i].includes(key)){\n        configCodeParts[i] = urlUpdateText;\n        isConfigCodeUpdated = true;\n      }\n    }\n    if(isConfigCodeUpdated){\n      for(var i = 0; i < configCodeParts.length; i++){\n        updatedUrl += configCodeParts[i];\n        console.log(\"i is: \"+i);\n        if(i !== configCodeParts.length-1){\n          updatedUrl += \"-\";\n        }\n\n      }\n    }else{\n        updatedUrl = configCode+\"-\"+urlUpdateText;\n    }\n\n    this.props.history.push(updatedUrl);\n    // console.log(urlUpdateText);\n\n  }\n\n  updateInput(evt){\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n    this.setState({[evt.target.name]: value});\n  }\n\n  validateAndAddToCart(wheelConfig, configurableStatus){\n    this.state.quantity > 0 ? this.props.updateCart(wheelConfig, configurableStatus) : alert(\"you need to select a quantity to add this item to cart\");\n  }\n\n\n\n\n  render(){\n\n\n    console.log(\"vmo: \"+this.state.activevitalsOptionsId);\n    const{activeDutyId, activeSeriesId, activematerialOptionsId, activevitalsOptionsId, activebracketOptionsId, activegrooveOptionsId, braking, quantity} = this.state;\n\n    const configurableStatus = data[activeDutyId][activeSeriesId].configurable;\n    const activeDuty = data[activeDutyId];\n    const activeDutyName = activeDuty.duty;\n    const activeSeries = data[activeDutyId][activeSeriesId];\n    const activeSeriesName = activeSeries.series;\n    const bracketOptions = activebracketOptionsId !== null ? activeSeries.bracketOptions : null;\n    const materialOptions = activeSeries.materialOptions;\n    const grooveOptions = activegrooveOptionsId !== null ? activeSeries.grooveOptions : null;\n    const vitalsOptions = materialOptions[activematerialOptionsId].vitalsOptions;\n\n    var activeProductImage;\n    activegrooveOptionsId !== null ?\n    activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][grooveOptions[activegrooveOptionsId].code][\"712\"] :\n    activebracketOptionsId !== null ?\n    activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][bracketOptions[activebracketOptionsId].code][\"712\"]:\n    activeProductImage = productImgPath[activeDuty.code][activeSeries.code][materialOptions[activematerialOptionsId].code][\"712\"];\n    ;\n\n    let activeVital = vitalsOptions[activevitalsOptionsId] ? vitalsOptions[activevitalsOptionsId] : vitalsOptions[0];\n\n    const toDownloadRef = React.createRef();\n\n    return(\n\n      <div className=\"config-castor-wrapper container\">\n        <h4 className=\"black medium section__title\">Build Your Castor</h4>\n        <div className=\"config-panel\">\n          <div ref={toDownloadRef}>\n            <div ref={el => (this.componentRef = el)}>\n              <div className=\"series-bar\">\n                <h4 className=\"black medium\">\n                  <span className=\"black regular\" style={{marginRight: '8px'}}>{activeDutyName+\" Castors\"}</span>\n                  {activeSeriesName}\n                </h4>\n              </div>\n            <div className=\"config-panel__body row\">\n              <div className=\"image-wrapper col-lg-7 col-md-6 col-sm-6 col-12\">\n                <img src={process.env.PUBLIC_URL + activeProductImage} alt=\"\" />\n              </div>\n              <div className=\"config-fields col-lg-5 col-md-6 col-sm-6 col-12\">\n                <div className=\"config-field-dd-material\">\n                  <DropdownMaterial\n                    activeOptionId= {materialOptions[activematerialOptionsId].id} //this will become a state variable\n                    label=\"WHEEL MATERIAL\"\n                    list={materialOptions}\n                    updateWheelConfig={this.updateWheelConfig}\n                  />\n                </div>\n\n                <div className=\"config-field-dd-wheel-dia\">\n                  <DropdownWheelDia\n                    activeOptionId= {activeVital ? activeVital.id : vitalsOptions[0].id   } //this will become a state variable\n                    label={\n                      <div style={{display: 'flex', alignItems: 'center'}}>\n                        <div>WHEEL DIAMETER</div>\n                      { vitalsOptions.some(d => d.showTreadWidthInDD === true) && <h6 className='h6 beige medium' style={{marginLeft: '4px'}}>( thickness )</h6>}\n                        <div style={{display: 'flex', alignItems: 'center', margin: '0 4px'}}><img src={LineArrow} alt=\"<---->\"/></div>\n                        <div>LOAD CAPACITY</div>\n                      </div> }\n                    list={vitalsOptions}\n                    updateWheelConfig={this.updateWheelConfig}\n                  />\n                </div>\n\n                <div className=\"config-fields-vitalsMeta-bracket-quantity\">\n                  <div className=\"wheel-config-meta\">\n                    <div>\n                    <h5 className=\"beige antique\">TOTAL HEIGHT</h5>\n                    <h5 className=\"beige antique\">(wheel + bracket)</h5>\n                    <h4 className=\"black medium\">{activeVital.totalHeight}</h4>\n                    </div>\n                    <div>\n                    <h5 className=\"beige antique\">WHEEL</h5>\n                    <h5 className=\"beige antique\">THICKNESS</h5>\n                    <h4 className=\"black medium\">{activeVital.treadWidth}</h4>\n                    </div>\n                  </div>\n\n                  {\n                    bracketOptions !== null &&\n\n                  <div className=\"config-fields-bracket\">\n                    <Radio\n                      activeOptionId= {bracketOptions[activebracketOptionsId].id} //this will become a state variable\n                      label=\"BRACKET TYPE\"\n                      list={bracketOptions}\n                      updateWheelConfig={this.updateWheelConfig}\n                    />\n\n                    <div className=\"config-fields-bracket-braking\">\n                      <Checkbox\n                      label={bracketOptions[activebracketOptionsId].brakingDescp}\n                      disabledClass={bracketOptions[activebracketOptionsId].brakingType === null && \"disabled\"}\n                      checked={braking}\n                      name=\"braking\"\n                      updateInput ={this.updateInput}\n                      />\n                    </div>\n                  </div>\n                  }\n\n                  {\n                    grooveOptions !== null &&\n\n                    <div className=\"config-fields-groove\">\n                      <Radio\n                        activeOptionId= {grooveOptions[activegrooveOptionsId].id} //this will become a state variable\n                        label=\"GROOVE TYPE\"\n                        list={grooveOptions}\n                        updateWheelConfig={this.updateWheelConfig}\n                      />\n                    </div>\n                  }\n\n                  <div className=\"config-fields-quantity\">\n                    <InputField\n                    label=\"QUANTITY\"\n                    type=\"number\"\n                    name=\"quantity\"\n                    updateInput ={this.updateInput}\n                    min=\"1\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            </div>\n          </div>\n          <div className= \"configure-panel__cta row\">\n            <div className=\"col-lg-7 col-md-6 col-sm-6 col-12 secondary_cta_wrapper\">\n              <ReactToPdf\n                targetRef={toDownloadRef}\n                options= {{\n                  orientation: 'landscape',\n                }}\n                filename=\"dhmwheels_product.pdf\"\n                >\n                  {({toPdf}) => (\n                      <div className=\"cta_cont\">\n                        <button className=\"secondary\" onClick={toPdf}><h4 className=\"black antique\">SAVE PAGE</h4></button>\n                      </div>\n                  )}\n              </ReactToPdf>\n              <div className=\"cta_cont\">\n                <button className=\"secondary\"><h4 className=\"black antique\">SHARE</h4></button>\n              </div>\n              <ReactToPrint content={() => this.componentRef}>\n                <PrintContextConsumer>\n                  {({ handlePrint }) => (\n                    <div className=\"cta_cont\">\n                      <button className=\"secondary\" onClick={handlePrint}>\n                        <h4 className=\"black antique\">PRINT PAGE</h4>\n                      </button>\n                    </div>\n                  )}\n                </PrintContextConsumer>\n              </ReactToPrint>\n            </div>\n            <div className=\"col-lg-5 col-md-6 col-sm-6 col-12 primary_cta_wrapper\">\n              <div className=\"cta_cont\">\n                <button className=\"primary\"><h4 className=\"black antique\">REQUEST QUOTE NOW</h4></button>\n              </div>\n              <div className=\"cta_cont\">\n                <button className=\"primary\" onClick={() => this.validateAndAddToCart(this.state, configurableStatus)}><h4 className=\"black antique\">ADD TO QUOTE CART</h4></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n\n    );\n  }\n\n}\nexport default ConfigureCastor;\n"]},"metadata":{},"sourceType":"module"}